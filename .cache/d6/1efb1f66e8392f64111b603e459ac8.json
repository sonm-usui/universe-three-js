{"id":"../node_modules/hyperswarm/lib/queue.js","dependencies":[{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/package.json","includedInParent":true,"mtime":1676236562742},{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/hyperswarm/package.json","includedInParent":true,"mtime":1676236534679},{"name":"shuffled-priority-queue","loc":{"line":3,"column":20,"index":34},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/hyperswarm/lib/queue.js","resolved":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/shuffled-priority-queue/index.js"},{"name":"events","loc":{"line":4,"column":33,"index":94},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/hyperswarm/lib/queue.js","resolved":"/Users/sonamchoeda/.nvm/versions/node/v14.18.0/lib/node_modules/parcel-bundler/node_modules/events/events.js"},{"name":"./peer-info","loc":{"line":5,"column":25,"index":129},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/hyperswarm/lib/queue.js","resolved":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/hyperswarm/lib/peer-info.js"},{"name":"./bulk-timer","loc":{"line":6,"column":22,"index":166},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/hyperswarm/lib/queue.js","resolved":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/hyperswarm/lib/bulk-timer.js"},{"name":"buffer","parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/hyperswarm/lib/queue.js","resolved":"/Users/sonamchoeda/.nvm/versions/node/v14.18.0/lib/node_modules/parcel-bundler/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n'use strict'\n\nconst spq = require('shuffled-priority-queue')\nconst { EventEmitter } = require('events')\nconst peerInfo = require('./peer-info')\nconst timer = require('./bulk-timer')\nconst noop = () => {}\nmodule.exports = (opts) => new PeerQueue(opts)\n\nconst BACKOFF_S = 1000\nconst BACKOFF_M = 5000\nconst BACKOFF_L = 15000\nconst FORGET_UNRESPONSIVE = 7500\nconst FORGET_BANNED = Infinity\n\nclass PeerQueue extends EventEmitter {\n  constructor (opts = {}) {\n    super()\n\n    const {\n      requeue = [ BACKOFF_S, BACKOFF_M, BACKOFF_L ],\n      forget = {\n        unresponsive: FORGET_UNRESPONSIVE,\n        banned: FORGET_BANNED\n      }\n    } = opts\n\n    const [\n      s = BACKOFF_S,\n      m = BACKOFF_M,\n      l = BACKOFF_L\n    ] = requeue\n    const backoff = [s, m, l, ...requeue.slice(3)]\n\n    const {\n      unresponsive = FORGET_UNRESPONSIVE,\n      banned = FORGET_BANNED\n    } = forget\n\n    this.destroyed = false\n    this._infos = new Map()\n    this._queue = spq()\n    this._multiplex = !!opts.multiplex\n\n    const push = this._push.bind(this)\n    const release = this._release.bind(this)\n    this._requeue = backoff.map(ms => timer(ms, push))\n    this._remove = [unresponsive, banned].map((ms) => {\n      return ms < Infinity\n        ? timer(ms, release)\n        : { push: noop, destroy: noop } // noop for infinite time\n    })\n\n    this._dedup = new Map()\n  }\n\n  get prioritised () {\n    if (!this._queue) return 0\n    const p = this._queue.priorities\n    let cnt = 0\n    for (let i = 2; i < p.length; i++) cnt += p[i].length\n    return cnt\n  }\n\n  get length () {\n    return this._queue.length\n  }\n\n  deduplicate (localId, remoteId, peer) {\n    if (!peer.stream) return false\n\n    const id = localId.toString('hex') + '\\n' + remoteId.toString('hex')\n    const cmp = Buffer.compare(localId, remoteId)\n\n    peer._dedup = id\n\n    if (cmp === 0) {\n      peer.destroy(new Error('Connected to self'))\n      return true\n    }\n\n    const other = this._dedup.get(id)\n\n    if (!other) {\n      this._dedup.set(id, peer)\n      return false\n    }\n\n    const otherIsDuplicate = (other.type === peer.type)\n      ? (cmp < 0 ? peer.client : !peer.client)\n      : other.type === 'utp'\n\n    if (otherIsDuplicate) { // this one is not the dup\n      this._dropDuplicate(peer, other, id)\n      return false\n    } else { // this one is the dup\n      this._dropDuplicate(other, peer, id)\n      return true\n    }\n  }\n\n  _dropDuplicate (peer, duplicatePeer, id) {\n    duplicatePeer.duplicate = true\n    duplicatePeer.emit('duplicate')\n    this._dedup.set(id, peer)\n    if (!duplicatePeer.client) return\n    duplicatePeer.ban(true)\n    peer.stream.on('close', this._unbanduplicate.bind(this, peer, duplicatePeer, id))\n  }\n\n  disconnected (peer) {\n    if (peer._dedup && this._dedup.get(peer._dedup) === peer) {\n      this._dedup.delete(peer._dedup)\n    }\n  }\n\n  _unbanduplicate (peer, duplicatePeer, id) {\n    // if we banned the surviving peer, dont unban anyone\n    if (peer.banned) return\n\n    // double check that this is exactly the one we banned earlier\n    if (this._infos === null || this._infos.get(toID(duplicatePeer, this._multiplex)) !== duplicatePeer) return\n\n    // remove and add to give it lowest possible prio\n    this.remove(duplicatePeer)\n    this.add(duplicatePeer)\n  }\n\n  _release (batch) {\n    for (const info of batch) this.remove(info.peer)\n  }\n\n  _push (batch) {\n    const empty = !this._queue.head()\n    let readable = false\n\n    for (const info of batch) {\n      info.active(false)\n      if (info.update() === false) {\n        this._remove[info.banned ? 1 : 0].push(info)\n        continue\n      }\n      this._queue.add(info)\n      readable = true\n    }\n    if (empty && readable) this.emit('readable')\n  }\n\n  requeue (info) {\n    if (this.destroyed) return false\n    const queue = info.requeue()\n    if (queue === -1) {\n      // Either we exhausted reconnect attempts, the peer was banned or\n      // reconnect is disabled. In any case - we have to remove the peer.\n      this._remove[info.banned ? 1 : 0].push(info)\n      return false\n    }\n    this._requeue[queue].push(info)\n    return true\n  }\n\n  shift () {\n    if (this.destroyed) return null\n    const info = this._queue.shift()\n    if (info) info.active(true)\n    return info\n  }\n\n  add (peer) {\n    if (this.destroyed) return\n\n    // TODO: support a multiplex: true flag, that will make the info object emit a\n    // 'topic' event instead of making dup connections, per topic\n    const id = toID(peer, this._multiplex)\n\n    let info = this._infos.get(id)\n    const existing = !!info\n\n    if (!info) {\n      info = peerInfo(peer, this)\n      this._infos.set(id, info)\n    }\n    if (peer.topic) info.topic(peer.topic)\n    if (this._multiplex && existing) return\n\n    if (this._queue.has(info)) return\n    if (!info.update()) return\n\n    const empty = !this._queue.head()\n    this._queue.add(info)\n    if (empty) this.emit('readable')\n  }\n\n  remove (peer) {\n    if (this.destroyed) return\n\n    const id = toID(peer, this._multiplex)\n    const info = this._infos.get(id)\n\n    if (info) {\n      info.destroy()\n      this._queue.remove(info)\n      this._infos.delete(id)\n    }\n  }\n\n  destroy () {\n    if (this.destroyed) return\n    this.destroyed = true\n\n    for (const timer of this._requeue) timer.destroy()\n    for (const timer of this._remove) timer.destroy()\n\n    this._infos = null\n    this._queue = null\n  }\n}\n\nfunction toID (peer, multiplex) {\n  const baseID = peer.host + ':' + peer.port\n  if (multiplex) return baseID\n  return baseID + (peer.topic ? '@' + peer.topic.toString('hex') : '')\n}\n\nmodule.exports.PeerQueue = PeerQueue\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/hyperswarm/lib/queue.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}}],"sources":{"../node_modules/hyperswarm/lib/queue.js":"'use strict'\n\nconst spq = require('shuffled-priority-queue')\nconst { EventEmitter } = require('events')\nconst peerInfo = require('./peer-info')\nconst timer = require('./bulk-timer')\nconst noop = () => {}\nmodule.exports = (opts) => new PeerQueue(opts)\n\nconst BACKOFF_S = 1000\nconst BACKOFF_M = 5000\nconst BACKOFF_L = 15000\nconst FORGET_UNRESPONSIVE = 7500\nconst FORGET_BANNED = Infinity\n\nclass PeerQueue extends EventEmitter {\n  constructor (opts = {}) {\n    super()\n\n    const {\n      requeue = [ BACKOFF_S, BACKOFF_M, BACKOFF_L ],\n      forget = {\n        unresponsive: FORGET_UNRESPONSIVE,\n        banned: FORGET_BANNED\n      }\n    } = opts\n\n    const [\n      s = BACKOFF_S,\n      m = BACKOFF_M,\n      l = BACKOFF_L\n    ] = requeue\n    const backoff = [s, m, l, ...requeue.slice(3)]\n\n    const {\n      unresponsive = FORGET_UNRESPONSIVE,\n      banned = FORGET_BANNED\n    } = forget\n\n    this.destroyed = false\n    this._infos = new Map()\n    this._queue = spq()\n    this._multiplex = !!opts.multiplex\n\n    const push = this._push.bind(this)\n    const release = this._release.bind(this)\n    this._requeue = backoff.map(ms => timer(ms, push))\n    this._remove = [unresponsive, banned].map((ms) => {\n      return ms < Infinity\n        ? timer(ms, release)\n        : { push: noop, destroy: noop } // noop for infinite time\n    })\n\n    this._dedup = new Map()\n  }\n\n  get prioritised () {\n    if (!this._queue) return 0\n    const p = this._queue.priorities\n    let cnt = 0\n    for (let i = 2; i < p.length; i++) cnt += p[i].length\n    return cnt\n  }\n\n  get length () {\n    return this._queue.length\n  }\n\n  deduplicate (localId, remoteId, peer) {\n    if (!peer.stream) return false\n\n    const id = localId.toString('hex') + '\\n' + remoteId.toString('hex')\n    const cmp = Buffer.compare(localId, remoteId)\n\n    peer._dedup = id\n\n    if (cmp === 0) {\n      peer.destroy(new Error('Connected to self'))\n      return true\n    }\n\n    const other = this._dedup.get(id)\n\n    if (!other) {\n      this._dedup.set(id, peer)\n      return false\n    }\n\n    const otherIsDuplicate = (other.type === peer.type)\n      ? (cmp < 0 ? peer.client : !peer.client)\n      : other.type === 'utp'\n\n    if (otherIsDuplicate) { // this one is not the dup\n      this._dropDuplicate(peer, other, id)\n      return false\n    } else { // this one is the dup\n      this._dropDuplicate(other, peer, id)\n      return true\n    }\n  }\n\n  _dropDuplicate (peer, duplicatePeer, id) {\n    duplicatePeer.duplicate = true\n    duplicatePeer.emit('duplicate')\n    this._dedup.set(id, peer)\n    if (!duplicatePeer.client) return\n    duplicatePeer.ban(true)\n    peer.stream.on('close', this._unbanduplicate.bind(this, peer, duplicatePeer, id))\n  }\n\n  disconnected (peer) {\n    if (peer._dedup && this._dedup.get(peer._dedup) === peer) {\n      this._dedup.delete(peer._dedup)\n    }\n  }\n\n  _unbanduplicate (peer, duplicatePeer, id) {\n    // if we banned the surviving peer, dont unban anyone\n    if (peer.banned) return\n\n    // double check that this is exactly the one we banned earlier\n    if (this._infos === null || this._infos.get(toID(duplicatePeer, this._multiplex)) !== duplicatePeer) return\n\n    // remove and add to give it lowest possible prio\n    this.remove(duplicatePeer)\n    this.add(duplicatePeer)\n  }\n\n  _release (batch) {\n    for (const info of batch) this.remove(info.peer)\n  }\n\n  _push (batch) {\n    const empty = !this._queue.head()\n    let readable = false\n\n    for (const info of batch) {\n      info.active(false)\n      if (info.update() === false) {\n        this._remove[info.banned ? 1 : 0].push(info)\n        continue\n      }\n      this._queue.add(info)\n      readable = true\n    }\n    if (empty && readable) this.emit('readable')\n  }\n\n  requeue (info) {\n    if (this.destroyed) return false\n    const queue = info.requeue()\n    if (queue === -1) {\n      // Either we exhausted reconnect attempts, the peer was banned or\n      // reconnect is disabled. In any case - we have to remove the peer.\n      this._remove[info.banned ? 1 : 0].push(info)\n      return false\n    }\n    this._requeue[queue].push(info)\n    return true\n  }\n\n  shift () {\n    if (this.destroyed) return null\n    const info = this._queue.shift()\n    if (info) info.active(true)\n    return info\n  }\n\n  add (peer) {\n    if (this.destroyed) return\n\n    // TODO: support a multiplex: true flag, that will make the info object emit a\n    // 'topic' event instead of making dup connections, per topic\n    const id = toID(peer, this._multiplex)\n\n    let info = this._infos.get(id)\n    const existing = !!info\n\n    if (!info) {\n      info = peerInfo(peer, this)\n      this._infos.set(id, info)\n    }\n    if (peer.topic) info.topic(peer.topic)\n    if (this._multiplex && existing) return\n\n    if (this._queue.has(info)) return\n    if (!info.update()) return\n\n    const empty = !this._queue.head()\n    this._queue.add(info)\n    if (empty) this.emit('readable')\n  }\n\n  remove (peer) {\n    if (this.destroyed) return\n\n    const id = toID(peer, this._multiplex)\n    const info = this._infos.get(id)\n\n    if (info) {\n      info.destroy()\n      this._queue.remove(info)\n      this._infos.delete(id)\n    }\n  }\n\n  destroy () {\n    if (this.destroyed) return\n    this.destroyed = true\n\n    for (const timer of this._requeue) timer.destroy()\n    for (const timer of this._remove) timer.destroy()\n\n    this._infos = null\n    this._queue = null\n  }\n}\n\nfunction toID (peer, multiplex) {\n  const baseID = peer.host + ':' + peer.port\n  if (multiplex) return baseID\n  return baseID + (peer.topic ? '@' + peer.topic.toString('hex') : '')\n}\n\nmodule.exports.PeerQueue = PeerQueue\n"},"lineCount":227}},"error":null,"hash":"69a0228b5afd2214f0d5ab945d66c77b","cacheData":{"env":{}}}