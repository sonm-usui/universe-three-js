{"id":"../node_modules/merkle-tree-stream/generator.js","dependencies":[{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/package.json","includedInParent":true,"mtime":1676236562742},{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/merkle-tree-stream/package.json","includedInParent":true,"mtime":1676236542957},{"name":"flat-tree","loc":{"line":5,"column":19,"index":214},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/merkle-tree-stream/generator.js","resolved":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/flat-tree/index.js"},{"name":"buffer","parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/merkle-tree-stream/generator.js","resolved":"/Users/sonamchoeda/.nvm/versions/node/v14.18.0/lib/node_modules/parcel-bundler/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n// a more low level interface to the merkle tree stream.\n// useful for certain applications the require non-streamy access to the algos.\n// versioned by the same semver as the stream interface.\n\nvar flat = require('flat-tree')\n\nmodule.exports = MerkleGenerator\n\nfunction MerkleGenerator (opts, roots) {\n  if (!(this instanceof MerkleGenerator)) return new MerkleGenerator(opts, roots)\n  if (!opts || !opts.leaf || !opts.parent) throw new Error('opts.leaf and opts.parent required')\n\n  this.roots = roots || opts.roots || []\n  this.blocks = this.roots.length ? 1 + flat.rightSpan(this.roots[this.roots.length - 1].index) / 2 : 0\n\n  for (var i = 0; i < this.roots.length; i++) {\n    var r = this.roots[i]\n    if (r && !r.parent) r.parent = flat.parent(r.index)\n  }\n\n  this._leaf = opts.leaf\n  this._parent = opts.parent\n}\n\nMerkleGenerator.prototype.next = function (data, nodes) {\n  if (!Buffer.isBuffer(data)) data = new Buffer(data)\n  if (!nodes) nodes = []\n\n  var index = 2 * this.blocks++\n\n  var leaf = {\n    index: index,\n    parent: flat.parent(index),\n    hash: null,\n    size: data.length,\n    data: data\n  }\n\n  leaf.hash = this._leaf(leaf, this.roots)\n  this.roots.push(leaf)\n  nodes.push(leaf)\n\n  while (this.roots.length > 1) {\n    var left = this.roots[this.roots.length - 2]\n    var right = this.roots[this.roots.length - 1]\n\n    if (left.parent !== right.parent) break\n\n    this.roots.pop()\n    this.roots[this.roots.length - 1] = leaf = {\n      index: left.parent,\n      parent: flat.parent(left.parent),\n      hash: this._parent(left, right),\n      size: left.size + right.size,\n      data: null\n    }\n    nodes.push(leaf)\n  }\n\n  return nodes\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/merkle-tree-stream/generator.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}}],"sources":{"../node_modules/merkle-tree-stream/generator.js":"// a more low level interface to the merkle tree stream.\n// useful for certain applications the require non-streamy access to the algos.\n// versioned by the same semver as the stream interface.\n\nvar flat = require('flat-tree')\n\nmodule.exports = MerkleGenerator\n\nfunction MerkleGenerator (opts, roots) {\n  if (!(this instanceof MerkleGenerator)) return new MerkleGenerator(opts, roots)\n  if (!opts || !opts.leaf || !opts.parent) throw new Error('opts.leaf and opts.parent required')\n\n  this.roots = roots || opts.roots || []\n  this.blocks = this.roots.length ? 1 + flat.rightSpan(this.roots[this.roots.length - 1].index) / 2 : 0\n\n  for (var i = 0; i < this.roots.length; i++) {\n    var r = this.roots[i]\n    if (r && !r.parent) r.parent = flat.parent(r.index)\n  }\n\n  this._leaf = opts.leaf\n  this._parent = opts.parent\n}\n\nMerkleGenerator.prototype.next = function (data, nodes) {\n  if (!Buffer.isBuffer(data)) data = new Buffer(data)\n  if (!nodes) nodes = []\n\n  var index = 2 * this.blocks++\n\n  var leaf = {\n    index: index,\n    parent: flat.parent(index),\n    hash: null,\n    size: data.length,\n    data: data\n  }\n\n  leaf.hash = this._leaf(leaf, this.roots)\n  this.roots.push(leaf)\n  nodes.push(leaf)\n\n  while (this.roots.length > 1) {\n    var left = this.roots[this.roots.length - 2]\n    var right = this.roots[this.roots.length - 1]\n\n    if (left.parent !== right.parent) break\n\n    this.roots.pop()\n    this.roots[this.roots.length - 1] = leaf = {\n      index: left.parent,\n      parent: flat.parent(left.parent),\n      hash: this._parent(left, right),\n      size: left.size + right.size,\n      data: null\n    }\n    nodes.push(leaf)\n  }\n\n  return nodes\n}\n"},"lineCount":63}},"error":null,"hash":"08a459070f88f664097588244bc596a7","cacheData":{"env":{}}}