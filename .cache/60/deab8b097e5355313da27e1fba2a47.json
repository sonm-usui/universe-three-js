{"id":"../node_modules/dat-node/lib/stats.js","dependencies":[{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/package.json","includedInParent":true,"mtime":1676236562742},{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/dat-node/package.json","includedInParent":true,"mtime":1676236531349},{"name":"assert","loc":{"line":1,"column":21,"index":21},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/dat-node/lib/stats.js","resolved":"/Users/sonamchoeda/.nvm/versions/node/v14.18.0/lib/node_modules/parcel-bundler/node_modules/assert/assert.js"},{"name":"events","loc":{"line":2,"column":27,"index":58},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/dat-node/lib/stats.js","resolved":"/Users/sonamchoeda/.nvm/versions/node/v14.18.0/lib/node_modules/parcel-bundler/node_modules/events/events.js"},{"name":"stream-each","loc":{"line":3,"column":19,"index":100},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/dat-node/lib/stats.js","resolved":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/stream-each/index.js"},{"name":"hyperdrive-network-speed","loc":{"line":4,"column":27,"index":142},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/dat-node/lib/stats.js","resolved":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/hyperdrive-network-speed/index.js"},{"name":"sparse-bitfield","loc":{"line":5,"column":23,"index":193},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/dat-node/lib/stats.js","resolved":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/sparse-bitfield/index.js"}],"generated":{"js":"var assert = require('assert')\nvar EventEmitter = require('events').EventEmitter\nvar each = require('stream-each')\nvar networkSpeed = require('hyperdrive-network-speed')\nvar bitfield = require('sparse-bitfield')\n\nmodule.exports = function (archive) {\n  assert.ok(archive, 'lib/stats archive required')\n  var stats = new EventEmitter()\n  var counted = bitfield()\n\n  var count = {\n    files: 0,\n    byteLength: 0,\n    length: 0,\n    version: 0\n  }\n\n  update()\n  if (!archive.writable) {\n    count.downloaded = 0\n    downloadStats()\n  }\n\n  // TODO: put in hyperdrive-stats\n  stats.get = function () {\n    return count\n  }\n  stats.network = networkSpeed(archive, { timeout: 2000 })\n\n  Object.defineProperties(stats, {\n    peers: {\n      enumerable: true,\n      get: function () {\n        if (!archive.content || !archive.content.peers) return {} // TODO: how to handle this?\n        var peers = archive.content.peers\n        var total = peers.length\n        var complete = peers.filter(function (peer) {\n          return peer.remoteLength === archive.content.length\n        }).length\n\n        return {\n          total: total,\n          complete: complete\n        }\n      }\n    }\n  })\n\n  return stats\n\n  function downloadStats () {\n    if (!archive.content) return archive.once('content', downloadStats)\n\n    var feed = archive.content\n    count.downloaded = 0\n    for (var i = 0; i < feed.length; i++) {\n      if (feed.has(i) && counted.set(i, true)) count.downloaded++\n    }\n    stats.emit('update')\n\n    archive.content.on('download', countDown)\n    archive.content.on('clear', checkDownloaded)\n\n    function checkDownloaded (start, end) {\n      for (; start < end; start++) {\n        if (counted.set(start, false)) count.downloaded--\n      }\n      stats.emit('update')\n    }\n\n    function countDown (index, data) {\n      if (counted.set(index, true)) count.downloaded++\n      stats.emit('update')\n    }\n  }\n\n  function update () {\n    if (stableVersion()) return wait()\n\n    // get current size of archive\n    var current = archive.tree.checkout(archive.version)\n    var initial = archive.tree.checkout(count.version)\n    var stream = initial.diff(current, { dels: true, puts: true })\n    each(stream, ondata, function () {\n      count.version = current.version\n      stats.emit('update', count)\n      if (!stableVersion()) return update()\n      wait()\n    })\n\n    function ondata (data, next) {\n      if (data.type === 'del') {\n        count.byteLength -= data.value.size\n        count.length -= data.value.blocks\n        count.files--\n      } else {\n        count.byteLength += data.value.size\n        count.length += data.value.blocks\n        count.files++\n      }\n      next()\n    }\n\n    function stableVersion () {\n      if (archive.version < 0) return false\n      return count.version === archive.version\n    }\n\n    function wait () {\n      archive.metadata.update(update)\n    }\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/dat-node/lib/stats.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}}],"sources":{"../node_modules/dat-node/lib/stats.js":"var assert = require('assert')\nvar EventEmitter = require('events').EventEmitter\nvar each = require('stream-each')\nvar networkSpeed = require('hyperdrive-network-speed')\nvar bitfield = require('sparse-bitfield')\n\nmodule.exports = function (archive) {\n  assert.ok(archive, 'lib/stats archive required')\n  var stats = new EventEmitter()\n  var counted = bitfield()\n\n  var count = {\n    files: 0,\n    byteLength: 0,\n    length: 0,\n    version: 0\n  }\n\n  update()\n  if (!archive.writable) {\n    count.downloaded = 0\n    downloadStats()\n  }\n\n  // TODO: put in hyperdrive-stats\n  stats.get = function () {\n    return count\n  }\n  stats.network = networkSpeed(archive, { timeout: 2000 })\n\n  Object.defineProperties(stats, {\n    peers: {\n      enumerable: true,\n      get: function () {\n        if (!archive.content || !archive.content.peers) return {} // TODO: how to handle this?\n        var peers = archive.content.peers\n        var total = peers.length\n        var complete = peers.filter(function (peer) {\n          return peer.remoteLength === archive.content.length\n        }).length\n\n        return {\n          total: total,\n          complete: complete\n        }\n      }\n    }\n  })\n\n  return stats\n\n  function downloadStats () {\n    if (!archive.content) return archive.once('content', downloadStats)\n\n    var feed = archive.content\n    count.downloaded = 0\n    for (var i = 0; i < feed.length; i++) {\n      if (feed.has(i) && counted.set(i, true)) count.downloaded++\n    }\n    stats.emit('update')\n\n    archive.content.on('download', countDown)\n    archive.content.on('clear', checkDownloaded)\n\n    function checkDownloaded (start, end) {\n      for (; start < end; start++) {\n        if (counted.set(start, false)) count.downloaded--\n      }\n      stats.emit('update')\n    }\n\n    function countDown (index, data) {\n      if (counted.set(index, true)) count.downloaded++\n      stats.emit('update')\n    }\n  }\n\n  function update () {\n    if (stableVersion()) return wait()\n\n    // get current size of archive\n    var current = archive.tree.checkout(archive.version)\n    var initial = archive.tree.checkout(count.version)\n    var stream = initial.diff(current, { dels: true, puts: true })\n    each(stream, ondata, function () {\n      count.version = current.version\n      stats.emit('update', count)\n      if (!stableVersion()) return update()\n      wait()\n    })\n\n    function ondata (data, next) {\n      if (data.type === 'del') {\n        count.byteLength -= data.value.size\n        count.length -= data.value.blocks\n        count.files--\n      } else {\n        count.byteLength += data.value.size\n        count.length += data.value.blocks\n        count.files++\n      }\n      next()\n    }\n\n    function stableVersion () {\n      if (archive.version < 0) return false\n      return count.version === archive.version\n    }\n\n    function wait () {\n      archive.metadata.update(update)\n    }\n  }\n}\n"},"lineCount":115}},"error":null,"hash":"2611319e2473fad3453caa89347a5867","cacheData":{"env":{}}}