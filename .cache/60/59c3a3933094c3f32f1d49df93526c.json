{"id":"../node_modules/append-tree/messages.js","dependencies":[{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/package.json","includedInParent":true,"mtime":1676236562742},{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/append-tree/package.json","includedInParent":true,"mtime":1676236536459},{"name":"protocol-buffers-encodings","loc":{"line":8,"column":24,"index":243},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/append-tree/messages.js","resolved":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/protocol-buffers-encodings/index.js"},{"name":"buffer","parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/append-tree/messages.js","resolved":"/Users/sonamchoeda/.nvm/versions/node/v14.18.0/lib/node_modules/parcel-bundler/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n// This file is auto generated by the protocol-buffers cli tool\n\n/* eslint-disable quotes */\n/* eslint-disable indent */\n/* eslint-disable no-redeclare */\n\n// Remember to `npm install --save protocol-buffers-encodings`\nvar encodings = require('protocol-buffers-encodings')\nvar varint = encodings.varint\nvar skip = encodings.skip\n\nvar Node = exports.Node = {\n  buffer: true,\n  encodingLength: null,\n  encode: null,\n  decode: null\n}\n\ndefineNode()\n\nfunction defineNode () {\n  var enc = [\n    encodings.string,\n    encodings.bytes\n  ]\n\n  Node.encodingLength = encodingLength\n  Node.encode = encode\n  Node.decode = decode\n\n  function encodingLength (obj) {\n    var length = 0\n    if (!defined(obj.name)) throw new Error(\"name is required\")\n    var len = enc[0].encodingLength(obj.name)\n    length += 1 + len\n    if (defined(obj.value)) {\n      var len = enc[1].encodingLength(obj.value)\n      length += 1 + len\n    }\n    if (defined(obj.paths)) {\n      var len = enc[1].encodingLength(obj.paths)\n      length += 1 + len\n    }\n    return length\n  }\n\n  function encode (obj, buf, offset) {\n    if (!offset) offset = 0\n    if (!buf) buf = Buffer.allocUnsafe(encodingLength(obj))\n    var oldOffset = offset\n    if (!defined(obj.name)) throw new Error(\"name is required\")\n    buf[offset++] = 10\n    enc[0].encode(obj.name, buf, offset)\n    offset += enc[0].encode.bytes\n    if (defined(obj.value)) {\n      buf[offset++] = 18\n      enc[1].encode(obj.value, buf, offset)\n      offset += enc[1].encode.bytes\n    }\n    if (defined(obj.paths)) {\n      buf[offset++] = 26\n      enc[1].encode(obj.paths, buf, offset)\n      offset += enc[1].encode.bytes\n    }\n    encode.bytes = offset - oldOffset\n    return buf\n  }\n\n  function decode (buf, offset, end) {\n    if (!offset) offset = 0\n    if (!end) end = buf.length\n    if (!(end <= buf.length && offset <= buf.length)) throw new Error(\"Decoded message is not valid\")\n    var oldOffset = offset\n    var obj = {\n      name: \"\",\n      value: null,\n      paths: null\n    }\n    var found0 = false\n    while (true) {\n      if (end <= offset) {\n        if (!found0) throw new Error(\"Decoded message is not valid\")\n        decode.bytes = offset - oldOffset\n        return obj\n      }\n      var prefix = varint.decode(buf, offset)\n      offset += varint.decode.bytes\n      var tag = prefix >> 3\n      switch (tag) {\n        case 1:\n        obj.name = enc[0].decode(buf, offset)\n        offset += enc[0].decode.bytes\n        found0 = true\n        break\n        case 2:\n        obj.value = enc[1].decode(buf, offset)\n        offset += enc[1].decode.bytes\n        break\n        case 3:\n        obj.paths = enc[1].decode(buf, offset)\n        offset += enc[1].decode.bytes\n        break\n        default:\n        offset = skip(prefix & 7, buf, offset)\n      }\n    }\n  }\n}\n\nfunction defined (val) {\n  return val !== null && val !== undefined && (typeof val !== 'number' || !isNaN(val))\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/append-tree/messages.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/append-tree/messages.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}}],"sources":{"../node_modules/append-tree/messages.js":"// This file is auto generated by the protocol-buffers cli tool\n\n/* eslint-disable quotes */\n/* eslint-disable indent */\n/* eslint-disable no-redeclare */\n\n// Remember to `npm install --save protocol-buffers-encodings`\nvar encodings = require('protocol-buffers-encodings')\nvar varint = encodings.varint\nvar skip = encodings.skip\n\nvar Node = exports.Node = {\n  buffer: true,\n  encodingLength: null,\n  encode: null,\n  decode: null\n}\n\ndefineNode()\n\nfunction defineNode () {\n  var enc = [\n    encodings.string,\n    encodings.bytes\n  ]\n\n  Node.encodingLength = encodingLength\n  Node.encode = encode\n  Node.decode = decode\n\n  function encodingLength (obj) {\n    var length = 0\n    if (!defined(obj.name)) throw new Error(\"name is required\")\n    var len = enc[0].encodingLength(obj.name)\n    length += 1 + len\n    if (defined(obj.value)) {\n      var len = enc[1].encodingLength(obj.value)\n      length += 1 + len\n    }\n    if (defined(obj.paths)) {\n      var len = enc[1].encodingLength(obj.paths)\n      length += 1 + len\n    }\n    return length\n  }\n\n  function encode (obj, buf, offset) {\n    if (!offset) offset = 0\n    if (!buf) buf = Buffer.allocUnsafe(encodingLength(obj))\n    var oldOffset = offset\n    if (!defined(obj.name)) throw new Error(\"name is required\")\n    buf[offset++] = 10\n    enc[0].encode(obj.name, buf, offset)\n    offset += enc[0].encode.bytes\n    if (defined(obj.value)) {\n      buf[offset++] = 18\n      enc[1].encode(obj.value, buf, offset)\n      offset += enc[1].encode.bytes\n    }\n    if (defined(obj.paths)) {\n      buf[offset++] = 26\n      enc[1].encode(obj.paths, buf, offset)\n      offset += enc[1].encode.bytes\n    }\n    encode.bytes = offset - oldOffset\n    return buf\n  }\n\n  function decode (buf, offset, end) {\n    if (!offset) offset = 0\n    if (!end) end = buf.length\n    if (!(end <= buf.length && offset <= buf.length)) throw new Error(\"Decoded message is not valid\")\n    var oldOffset = offset\n    var obj = {\n      name: \"\",\n      value: null,\n      paths: null\n    }\n    var found0 = false\n    while (true) {\n      if (end <= offset) {\n        if (!found0) throw new Error(\"Decoded message is not valid\")\n        decode.bytes = offset - oldOffset\n        return obj\n      }\n      var prefix = varint.decode(buf, offset)\n      offset += varint.decode.bytes\n      var tag = prefix >> 3\n      switch (tag) {\n        case 1:\n        obj.name = enc[0].decode(buf, offset)\n        offset += enc[0].decode.bytes\n        found0 = true\n        break\n        case 2:\n        obj.value = enc[1].decode(buf, offset)\n        offset += enc[1].decode.bytes\n        break\n        case 3:\n        obj.paths = enc[1].decode(buf, offset)\n        offset += enc[1].decode.bytes\n        break\n        default:\n        offset = skip(prefix & 7, buf, offset)\n      }\n    }\n  }\n}\n\nfunction defined (val) {\n  return val !== null && val !== undefined && (typeof val !== 'number' || !isNaN(val))\n}\n"},"lineCount":114}},"error":null,"hash":"5542cd484afbd9d4bf30720e3788e9c7","cacheData":{"env":{}}}