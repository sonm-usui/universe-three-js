{"id":"../node_modules/@hyperswarm/network/index.js","dependencies":[{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/package.json","includedInParent":true,"mtime":1676236562742},{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/@hyperswarm/network/package.json","includedInParent":true,"mtime":1676236537476},{"name":"utp-native","loc":{"line":2,"column":20,"index":33},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/@hyperswarm/network/index.js","resolved":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/utp-native/index.js"},{"name":"net","loc":{"line":3,"column":20,"index":67},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/@hyperswarm/network/index.js","resolved":"/Users/sonamchoeda/.nvm/versions/node/v14.18.0/lib/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"nanoresource","loc":{"line":4,"column":29,"index":103},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/@hyperswarm/network/index.js","resolved":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/nanoresource/index.js"},{"name":"@hyperswarm/discovery","loc":{"line":5,"column":26,"index":145},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/@hyperswarm/network/index.js","resolved":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/@hyperswarm/discovery/index.js"},{"name":"os","loc":{"line":259,"column":21,"index":6563},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/@hyperswarm/network/index.js","resolved":"/Users/sonamchoeda/.nvm/versions/node/v14.18.0/lib/node_modules/parcel-bundler/node_modules/os-browserify/browser.js"}],"generated":{"js":"'use strict'\nconst utp = require('utp-native')\nconst net = require('net')\nconst Nanoresource = require('nanoresource')\nconst discovery = require('@hyperswarm/discovery')\n\nconst CONNECTION_TIMEOUT = 10000 // TODO: make configurable\n\nmodule.exports = (opts) => new NetworkResource(opts)\n\nclass NetworkResource extends Nanoresource {\n  constructor (opts) {\n    if (!opts) opts = {}\n    super()\n    this.id = opts.id || null\n    this.port = opts.port || 0\n    this.announcePort = opts.announcePort || 0\n    this.preferredPort = opts.preferredPort || 0\n    this.tcp = net.createServer()\n    this.utp = utp()\n    this.discovery = null\n    this.options = opts\n    this.sockets = new Set()\n    this._announceLocalAddress = !!opts.announceLocalAddress\n    this._onbind = opts.bind || noop\n    this._onclose = opts.close || noop\n    this._onsocket = opts.socket || noop\n    this._bootstrap = opts.bootstrap\n    this._ephemeral = opts.ephemeral\n    this.utp.on('connection', this._onincoming.bind(this, false))\n    this.tcp.on('connection', this._onincoming.bind(this, true))\n  }\n\n  _onincoming (isTCP, socket) {\n    if (isTCP) socket.setNoDelay(true)\n    else socket.on('end', noHalfOpen) // utp defaults to halfOpen so end->finish like tcp\n    this.sockets.add(socket)\n    socket.on('close', this._removeSocket.bind(this, socket))\n    this._onsocket(socket, isTCP)\n  }\n\n  address () {\n    return this.tcp.address()\n  }\n\n  connect (peer, cb) {\n    const self = this\n    const tcp = net.connect(peer.port, peer.host)\n    const timeout = setTimeout(ontimeout, CONNECTION_TIMEOUT)\n    let timedout = false\n    let connected = false\n    let active = [tcp]\n    let closes = 1\n    tcp.setNoDelay(true)\n    tcp.on('error', ontcperror)\n    tcp.on('connect', onconnect)\n    tcp.on('close', onclose)\n    if (!peer.referrer) return\n    closes++\n    this.open(onopen)\n\n    function onopen (err) {\n      if (err) return onerror(err)\n      self.discovery.holepunch(peer, onholepunch)\n    }\n\n    function ontimeout () {\n      timedout = true\n      for (const socket of active) socket.destroy()\n      cb(new Error('Timeout'))\n    }\n\n    function onholepunch (err) {\n      if (connected || timedout) return\n      if (err) return onerror(err)\n\n      const utp = self.utp.connect(peer.port, peer.host)\n\n      utp.on('error', onutperror)\n      utp.on('connect', onconnect)\n      utp.on('close', onclose)\n      active.push(utp)\n    }\n\n    function onconnect () {\n      const socket = this\n      if (self.closed || connected || timedout) return socket.destroy()\n\n      // eagerly destroy dead sockets by now\n      for (const a of active) {\n        if (a !== socket) a.destroy()\n      }\n\n      clearTimeout(timeout)\n      connected = true\n      self.sockets.add(socket)\n      cb(null, socket, tcp === socket)\n    }\n\n    function onerror (err) {\n      if (!--closes && !connected && !timedout) {\n        clearTimeout(timeout)\n        cb(err || new Error('All sockets failed'))\n      }\n    }\n\n    function onclose () {\n      self.sockets.delete(this) // only one of the sockets are added but this still works\n      onerror(null)\n    }\n  }\n\n  announce (key, { lookup = false, port = this.announcePort } = {}) {\n    if (!this.discovery) throw new Error('Bind before announcing')\n    const localPort = port || this.tcp.address().port\n    const localAddress = this._localAddress()\n    return this.discovery.announce(key, { port, localPort, localAddress, lookup })\n  }\n\n  lookupOne (key, cb) {\n    if (!this.discovery) throw new Error('Bind before doing a lookup')\n    const localAddress = this._localAddress()\n    this.discovery.lookupOne(key, { localAddress }, cb)\n  }\n\n  lookup (key) {\n    if (!this.discovery) throw new Error('Bind before doing a lookup')\n    const localAddress = this._localAddress()\n    return this.discovery.lookup(key, { localAddress })\n  }\n\n  bind (preferredPort, cb) {\n    if (typeof preferredPort === 'function') {\n      return this.open(preferredPort)\n    }\n    this.preferredPort = preferredPort || 0\n    this.open(cb)\n  }\n\n  _localAddress () {\n    if (!this._announceLocalAddress) return null\n    const ip = localIp()\n    if (!ip) return null\n    return {\n      host: ip,\n      port: this.tcp.address().port\n    }\n  }\n\n  _open (cb) {\n    const self = this\n    const ports = this.port !== 0\n      ? [ this.port ]\n      : [\n        this.preferredPort,\n        this.preferredPort ? this.preferredPort + 1 : 0,\n        this.preferredPort ? this.preferredPort + 2 : 0,\n        0,\n        0,\n        0,\n        0\n      ]\n\n    let tries = 0\n    listenBoth(this.tcp, this.utp, ports[0], retry)\n\n    function retry (err) {\n      if (!err) return onlisten()\n      if (++tries >= ports.length) return cb(err)\n      listenBoth(self.tcp, self.utp, ports[tries], retry)\n    }\n\n    function onlisten () {\n      self.discovery = discovery({\n        id: self.id,\n        bootstrap: self._bootstrap,\n        // pass original opts.ephemeral (stored on self._ephemeral)\n        // to preserve potential `undefined` value for adaptive ephemerality\n        ephemeral: self._ephemeral,\n        socket: self.utp\n      })\n      self._onbind()\n      cb(null)\n    }\n  }\n\n  _removeSocket (socket) {\n    this.sockets.delete(socket)\n  }\n\n  _close (cb) {\n    const self = this\n\n    this.discovery.destroy()\n    this.discovery.on('close', ondiscoveryclose)\n    this.utp.maxConnections = -1\n    this.tcp.maxConnections = -1\n\n    function ondiscoveryclose () {\n      let missing = 2\n      for (const socket of self.sockets) socket.destroy()\n      self.sockets.clear()\n\n      self.tcp.close()\n      self.utp.close()\n\n      self.tcp.on('close', onclose)\n      self.utp.on('close', onclose)\n\n      function onclose () {\n        if (--missing) return\n        self.discovery = null\n        self._onclose()\n        cb(null)\n      }\n    }\n  }\n}\n\nfunction listenBoth (tcp, utp, port, cb) {\n  listen(tcp, port, function (err) {\n    if (err) return cb(err)\n\n    listen(utp, tcp.address().port, function (err) {\n      if (err) {\n        tcp.once('close', () => cb(err))\n        tcp.close()\n        return\n      }\n\n      cb(null)\n    })\n  })\n}\n\nfunction ontcperror (err) {\n  if (this.destroyed === false) this.destroy(err)\n}\n\nfunction onutperror (err) {\n  if (this.destroyed === false) this.destroy(err)\n}\n\nfunction listen (server, port, cb) {\n  server.on('listening', done)\n  server.on('error', done)\n  server.listen(port)\n\n  function done (err) {\n    server.removeListener('listening', done)\n    server.removeListener('error', done)\n    cb(err)\n  }\n}\n\nfunction noop () {}\n\nfunction localIp () {\n  const os = require('os')\n  const nets = os.networkInterfaces()\n  for (const name of Object.keys(nets)) {\n    const addrs = nets[name]\n    for (const addr of addrs) {\n      if (!addr.internal && addr.family === 'IPv4') {\n        return addr.address\n      }\n    }\n  }\n  return null\n}\n\nfunction noHalfOpen () {\n  this.end()\n}\n\nmodule.exports.NetworkResource = NetworkResource\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/@hyperswarm/network/index.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}}],"sources":{"../node_modules/@hyperswarm/network/index.js":"'use strict'\nconst utp = require('utp-native')\nconst net = require('net')\nconst Nanoresource = require('nanoresource')\nconst discovery = require('@hyperswarm/discovery')\n\nconst CONNECTION_TIMEOUT = 10000 // TODO: make configurable\n\nmodule.exports = (opts) => new NetworkResource(opts)\n\nclass NetworkResource extends Nanoresource {\n  constructor (opts) {\n    if (!opts) opts = {}\n    super()\n    this.id = opts.id || null\n    this.port = opts.port || 0\n    this.announcePort = opts.announcePort || 0\n    this.preferredPort = opts.preferredPort || 0\n    this.tcp = net.createServer()\n    this.utp = utp()\n    this.discovery = null\n    this.options = opts\n    this.sockets = new Set()\n    this._announceLocalAddress = !!opts.announceLocalAddress\n    this._onbind = opts.bind || noop\n    this._onclose = opts.close || noop\n    this._onsocket = opts.socket || noop\n    this._bootstrap = opts.bootstrap\n    this._ephemeral = opts.ephemeral\n    this.utp.on('connection', this._onincoming.bind(this, false))\n    this.tcp.on('connection', this._onincoming.bind(this, true))\n  }\n\n  _onincoming (isTCP, socket) {\n    if (isTCP) socket.setNoDelay(true)\n    else socket.on('end', noHalfOpen) // utp defaults to halfOpen so end->finish like tcp\n    this.sockets.add(socket)\n    socket.on('close', this._removeSocket.bind(this, socket))\n    this._onsocket(socket, isTCP)\n  }\n\n  address () {\n    return this.tcp.address()\n  }\n\n  connect (peer, cb) {\n    const self = this\n    const tcp = net.connect(peer.port, peer.host)\n    const timeout = setTimeout(ontimeout, CONNECTION_TIMEOUT)\n    let timedout = false\n    let connected = false\n    let active = [tcp]\n    let closes = 1\n    tcp.setNoDelay(true)\n    tcp.on('error', ontcperror)\n    tcp.on('connect', onconnect)\n    tcp.on('close', onclose)\n    if (!peer.referrer) return\n    closes++\n    this.open(onopen)\n\n    function onopen (err) {\n      if (err) return onerror(err)\n      self.discovery.holepunch(peer, onholepunch)\n    }\n\n    function ontimeout () {\n      timedout = true\n      for (const socket of active) socket.destroy()\n      cb(new Error('Timeout'))\n    }\n\n    function onholepunch (err) {\n      if (connected || timedout) return\n      if (err) return onerror(err)\n\n      const utp = self.utp.connect(peer.port, peer.host)\n\n      utp.on('error', onutperror)\n      utp.on('connect', onconnect)\n      utp.on('close', onclose)\n      active.push(utp)\n    }\n\n    function onconnect () {\n      const socket = this\n      if (self.closed || connected || timedout) return socket.destroy()\n\n      // eagerly destroy dead sockets by now\n      for (const a of active) {\n        if (a !== socket) a.destroy()\n      }\n\n      clearTimeout(timeout)\n      connected = true\n      self.sockets.add(socket)\n      cb(null, socket, tcp === socket)\n    }\n\n    function onerror (err) {\n      if (!--closes && !connected && !timedout) {\n        clearTimeout(timeout)\n        cb(err || new Error('All sockets failed'))\n      }\n    }\n\n    function onclose () {\n      self.sockets.delete(this) // only one of the sockets are added but this still works\n      onerror(null)\n    }\n  }\n\n  announce (key, { lookup = false, port = this.announcePort } = {}) {\n    if (!this.discovery) throw new Error('Bind before announcing')\n    const localPort = port || this.tcp.address().port\n    const localAddress = this._localAddress()\n    return this.discovery.announce(key, { port, localPort, localAddress, lookup })\n  }\n\n  lookupOne (key, cb) {\n    if (!this.discovery) throw new Error('Bind before doing a lookup')\n    const localAddress = this._localAddress()\n    this.discovery.lookupOne(key, { localAddress }, cb)\n  }\n\n  lookup (key) {\n    if (!this.discovery) throw new Error('Bind before doing a lookup')\n    const localAddress = this._localAddress()\n    return this.discovery.lookup(key, { localAddress })\n  }\n\n  bind (preferredPort, cb) {\n    if (typeof preferredPort === 'function') {\n      return this.open(preferredPort)\n    }\n    this.preferredPort = preferredPort || 0\n    this.open(cb)\n  }\n\n  _localAddress () {\n    if (!this._announceLocalAddress) return null\n    const ip = localIp()\n    if (!ip) return null\n    return {\n      host: ip,\n      port: this.tcp.address().port\n    }\n  }\n\n  _open (cb) {\n    const self = this\n    const ports = this.port !== 0\n      ? [ this.port ]\n      : [\n        this.preferredPort,\n        this.preferredPort ? this.preferredPort + 1 : 0,\n        this.preferredPort ? this.preferredPort + 2 : 0,\n        0,\n        0,\n        0,\n        0\n      ]\n\n    let tries = 0\n    listenBoth(this.tcp, this.utp, ports[0], retry)\n\n    function retry (err) {\n      if (!err) return onlisten()\n      if (++tries >= ports.length) return cb(err)\n      listenBoth(self.tcp, self.utp, ports[tries], retry)\n    }\n\n    function onlisten () {\n      self.discovery = discovery({\n        id: self.id,\n        bootstrap: self._bootstrap,\n        // pass original opts.ephemeral (stored on self._ephemeral)\n        // to preserve potential `undefined` value for adaptive ephemerality\n        ephemeral: self._ephemeral,\n        socket: self.utp\n      })\n      self._onbind()\n      cb(null)\n    }\n  }\n\n  _removeSocket (socket) {\n    this.sockets.delete(socket)\n  }\n\n  _close (cb) {\n    const self = this\n\n    this.discovery.destroy()\n    this.discovery.on('close', ondiscoveryclose)\n    this.utp.maxConnections = -1\n    this.tcp.maxConnections = -1\n\n    function ondiscoveryclose () {\n      let missing = 2\n      for (const socket of self.sockets) socket.destroy()\n      self.sockets.clear()\n\n      self.tcp.close()\n      self.utp.close()\n\n      self.tcp.on('close', onclose)\n      self.utp.on('close', onclose)\n\n      function onclose () {\n        if (--missing) return\n        self.discovery = null\n        self._onclose()\n        cb(null)\n      }\n    }\n  }\n}\n\nfunction listenBoth (tcp, utp, port, cb) {\n  listen(tcp, port, function (err) {\n    if (err) return cb(err)\n\n    listen(utp, tcp.address().port, function (err) {\n      if (err) {\n        tcp.once('close', () => cb(err))\n        tcp.close()\n        return\n      }\n\n      cb(null)\n    })\n  })\n}\n\nfunction ontcperror (err) {\n  if (this.destroyed === false) this.destroy(err)\n}\n\nfunction onutperror (err) {\n  if (this.destroyed === false) this.destroy(err)\n}\n\nfunction listen (server, port, cb) {\n  server.on('listening', done)\n  server.on('error', done)\n  server.listen(port)\n\n  function done (err) {\n    server.removeListener('listening', done)\n    server.removeListener('error', done)\n    cb(err)\n  }\n}\n\nfunction noop () {}\n\nfunction localIp () {\n  const os = require('os')\n  const nets = os.networkInterfaces()\n  for (const name of Object.keys(nets)) {\n    const addrs = nets[name]\n    for (const addr of addrs) {\n      if (!addr.internal && addr.family === 'IPv4') {\n        return addr.address\n      }\n    }\n  }\n  return null\n}\n\nfunction noHalfOpen () {\n  this.end()\n}\n\nmodule.exports.NetworkResource = NetworkResource\n"},"lineCount":277}},"error":null,"hash":"8a72b75631b106ca97e2d6df2972df26","cacheData":{"env":{}}}