{"id":"../node_modules/append-tree/node_modules/codecs/index.js","dependencies":[{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/package.json","includedInParent":true,"mtime":1676236562742},{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/append-tree/node_modules/codecs/package.json","includedInParent":true,"mtime":1676236539720},{"name":"buffer","parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/append-tree/node_modules/codecs/index.js","resolved":"/Users/sonamchoeda/.nvm/versions/node/v14.18.0/lib/node_modules/parcel-bundler/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nmodule.exports = codecs\n\nvar fromBuffer = (Buffer.from && Buffer.from !== Uint8Array.from)\n  ? Buffer.from\n  : Buffer\n\ncodecs.ascii = createString('ascii')\ncodecs.utf8 = createString('utf-8')\ncodecs.hex = createString('hex')\ncodecs.base64 = createString('base64')\ncodecs.ucs2 = createString('ucs2')\ncodecs.utf16le = createString('utf16le')\ncodecs.ndjson = createJSON(true)\ncodecs.json = createJSON(false)\ncodecs.binary = {\n  encode: function encodeBinary (obj) {\n    return typeof obj === 'string' ? fromBuffer(obj, 'utf-8') : obj\n  },\n  decode: function decodeBinary (buf) {\n    return buf\n  }\n}\n\nfunction codecs (fmt) {\n  if (typeof fmt === 'object' && fmt && fmt.encode && fmt.decode) return fmt\n\n  switch (fmt) {\n    case 'ndjson': return codecs.ndjson\n    case 'json': return codecs.json\n    case 'ascii': return codecs.ascii\n    case 'utf-8':\n    case 'utf8': return codecs.utf8\n    case 'hex': return codecs.hex\n    case 'base64': return codecs.base64\n    case 'ucs-2':\n    case 'ucs2': return codecs.ucs2\n    case 'utf16-le':\n    case 'utf16le': return codecs.utf16le\n  }\n\n  return codecs.binary\n}\n\nfunction createJSON (newline) {\n  return {\n    encode: newline ? encodeNDJSON : encodeJSON,\n    decode: function decodeJSON (buf) {\n      return JSON.parse(buf.toString())\n    }\n  }\n\n  function encodeJSON (val) {\n    return new Buffer(JSON.stringify(val))\n  }\n\n  function encodeNDJSON (val) {\n    return new Buffer(JSON.stringify(val) + '\\n')\n  }\n}\n\nfunction createString (type) {\n  return {\n    encode: function encodeString (val) {\n      if (typeof val !== 'string') val = val.toString()\n      return fromBuffer(val, type)\n    },\n    decode: function decodeString (buf) {\n      return buf.toString(type)\n    }\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/append-tree/node_modules/codecs/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}}],"sources":{"../node_modules/append-tree/node_modules/codecs/index.js":"module.exports = codecs\n\nvar fromBuffer = (Buffer.from && Buffer.from !== Uint8Array.from)\n  ? Buffer.from\n  : Buffer\n\ncodecs.ascii = createString('ascii')\ncodecs.utf8 = createString('utf-8')\ncodecs.hex = createString('hex')\ncodecs.base64 = createString('base64')\ncodecs.ucs2 = createString('ucs2')\ncodecs.utf16le = createString('utf16le')\ncodecs.ndjson = createJSON(true)\ncodecs.json = createJSON(false)\ncodecs.binary = {\n  encode: function encodeBinary (obj) {\n    return typeof obj === 'string' ? fromBuffer(obj, 'utf-8') : obj\n  },\n  decode: function decodeBinary (buf) {\n    return buf\n  }\n}\n\nfunction codecs (fmt) {\n  if (typeof fmt === 'object' && fmt && fmt.encode && fmt.decode) return fmt\n\n  switch (fmt) {\n    case 'ndjson': return codecs.ndjson\n    case 'json': return codecs.json\n    case 'ascii': return codecs.ascii\n    case 'utf-8':\n    case 'utf8': return codecs.utf8\n    case 'hex': return codecs.hex\n    case 'base64': return codecs.base64\n    case 'ucs-2':\n    case 'ucs2': return codecs.ucs2\n    case 'utf16-le':\n    case 'utf16le': return codecs.utf16le\n  }\n\n  return codecs.binary\n}\n\nfunction createJSON (newline) {\n  return {\n    encode: newline ? encodeNDJSON : encodeJSON,\n    decode: function decodeJSON (buf) {\n      return JSON.parse(buf.toString())\n    }\n  }\n\n  function encodeJSON (val) {\n    return new Buffer(JSON.stringify(val))\n  }\n\n  function encodeNDJSON (val) {\n    return new Buffer(JSON.stringify(val) + '\\n')\n  }\n}\n\nfunction createString (type) {\n  return {\n    encode: function encodeString (val) {\n      if (typeof val !== 'string') val = val.toString()\n      return fromBuffer(val, type)\n    },\n    decode: function decodeString (buf) {\n      return buf.toString(type)\n    }\n  }\n}\n"},"lineCount":73}},"error":null,"hash":"748718c002b4825a15b11072933822ab","cacheData":{"env":{}}}