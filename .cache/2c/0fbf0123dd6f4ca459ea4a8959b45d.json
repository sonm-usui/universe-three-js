{"id":"../node_modules/sodium-javascript/crypto_stream.js","dependencies":[{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/package.json","includedInParent":true,"mtime":1676236562742},{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/sodium-javascript/package.json","includedInParent":true,"mtime":1676236540657},{"name":"xsalsa20","loc":{"line":1,"column":23,"index":23},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/sodium-javascript/crypto_stream.js","resolved":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/xsalsa20/index.js"}],"generated":{"js":"var xsalsa20 = require('xsalsa20')\n\nexports.crypto_stream_KEYBYTES = 32\nexports.crypto_stream_NONCEBYTES = 24\nexports.crypto_stream_PRIMITIVE = 'xsalsa20'\n\nexports.crypto_stream = function (out, nonce, key) {\n  out.fill(0)\n  exports.crypto_stream_xor(out, out, nonce, key)\n}\n\nexports.crypto_stream_xor = function (out, inp, nonce, key) {\n  var xor = xsalsa20(nonce, key)\n  xor.update(inp, out)\n  xor.final()\n}\n\nexports.crypto_stream_xor_instance = function (nonce, key) {\n  return new XOR(nonce, key)\n}\n\nfunction XOR (nonce, key) {\n  this._instance = xsalsa20(nonce, key)\n}\n\nXOR.prototype.update = function (out, inp) {\n  this._instance.update(inp, out)\n}\n\nXOR.prototype.final = function () {\n  this._instance.finalize()\n  this._instance = null\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/sodium-javascript/crypto_stream.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}}],"sources":{"../node_modules/sodium-javascript/crypto_stream.js":"var xsalsa20 = require('xsalsa20')\n\nexports.crypto_stream_KEYBYTES = 32\nexports.crypto_stream_NONCEBYTES = 24\nexports.crypto_stream_PRIMITIVE = 'xsalsa20'\n\nexports.crypto_stream = function (out, nonce, key) {\n  out.fill(0)\n  exports.crypto_stream_xor(out, out, nonce, key)\n}\n\nexports.crypto_stream_xor = function (out, inp, nonce, key) {\n  var xor = xsalsa20(nonce, key)\n  xor.update(inp, out)\n  xor.final()\n}\n\nexports.crypto_stream_xor_instance = function (nonce, key) {\n  return new XOR(nonce, key)\n}\n\nfunction XOR (nonce, key) {\n  this._instance = xsalsa20(nonce, key)\n}\n\nXOR.prototype.update = function (out, inp) {\n  this._instance.update(inp, out)\n}\n\nXOR.prototype.final = function () {\n  this._instance.finalize()\n  this._instance = null\n}\n"},"lineCount":34}},"error":null,"hash":"8ce5af41c24c75403753ae3046365ec6","cacheData":{"env":{}}}