{"id":"../node_modules/b4a/lib/utf8.js","dependencies":[{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/package.json","includedInParent":true,"mtime":1676236562742},{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/b4a/package.json","includedInParent":true,"mtime":1676236539687}],"generated":{"js":"function byteLength (string) {\n  let length = 0\n\n  for (let i = 0, n = string.length; i < n; i++) {\n    const code = string.charCodeAt(i)\n\n    if (code >= 0xd800 && code <= 0xdbff && i + 1 < n) {\n      const code = string.charCodeAt(i + 1)\n\n      if (code >= 0xdc00 && code <= 0xdfff) {\n        length += 4\n        i++\n        continue\n      }\n    }\n\n    if (code <= 0x7f) length += 1\n    else if (code <= 0x7ff) length += 2\n    else length += 3\n  }\n\n  return length\n}\n\nlet toString\n\nif (typeof TextDecoder !== 'undefined') {\n  const decoder = new TextDecoder()\n\n  toString = function toString (buffer) {\n    return decoder.decode(buffer)\n  }\n} else {\n  toString = function toString (buffer) {\n    const len = buffer.byteLength\n\n    let output = ''\n    let i = 0\n\n    while (i < len) {\n      let byte = buffer[i]\n\n      if (byte <= 0x7f) {\n        output += String.fromCharCode(byte)\n        i++\n        continue\n      }\n\n      let bytesNeeded = 0\n      let codePoint = 0\n\n      if (byte <= 0xdf) {\n        bytesNeeded = 1\n        codePoint = byte & 0x1f\n      } else if (byte <= 0xef) {\n        bytesNeeded = 2\n        codePoint = byte & 0x0f\n      } else if (byte <= 0xf4) {\n        bytesNeeded = 3\n        codePoint = byte & 0x07\n      }\n\n      if (len - i - bytesNeeded > 0) {\n        let k = 0\n\n        while (k < bytesNeeded) {\n          byte = buffer[i + k + 1]\n          codePoint = (codePoint << 6) | (byte & 0x3f)\n          k += 1\n        }\n      } else {\n        codePoint = 0xfffd\n        bytesNeeded = len - i\n      }\n\n      output += String.fromCodePoint(codePoint)\n      i += bytesNeeded + 1\n    }\n\n    return output\n  }\n}\n\nlet write\n\nif (typeof TextEncoder !== 'undefined') {\n  const encoder = new TextEncoder()\n\n  write = function write (buffer, string, offset = 0, length = byteLength(string)) {\n    const len = Math.min(length, buffer.byteLength - offset)\n    encoder.encodeInto(string, buffer.subarray(offset, offset + len))\n    return len\n  }\n} else {\n  write = function write (buffer, string, offset = 0, length = byteLength(string)) {\n    const len = Math.min(length, buffer.byteLength - offset)\n\n    buffer = buffer.subarray(offset, offset + len)\n\n    let i = 0\n    let j = 0\n\n    while (i < string.length) {\n      const code = string.codePointAt(i)\n\n      if (code <= 0x7f) {\n        buffer[j++] = code\n        i++\n        continue\n      }\n\n      let count = 0\n      let bits = 0\n\n      if (code <= 0x7ff) {\n        count = 6\n        bits = 0xc0\n      } else if (code <= 0xffff) {\n        count = 12\n        bits = 0xe0\n      } else if (code <= 0x1fffff) {\n        count = 18\n        bits = 0xf0\n      }\n\n      buffer[j++] = bits | (code >> count)\n      count -= 6\n\n      while (count >= 0) {\n        buffer[j++] = 0x80 | ((code >> count) & 0x3f)\n        count -= 6\n      }\n\n      i += code >= 0x10000 ? 2 : 1\n    }\n\n    return len\n  }\n}\n\nmodule.exports = {\n  byteLength,\n  toString,\n  write\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/b4a/lib/utf8.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}}],"sources":{"../node_modules/b4a/lib/utf8.js":"function byteLength (string) {\n  let length = 0\n\n  for (let i = 0, n = string.length; i < n; i++) {\n    const code = string.charCodeAt(i)\n\n    if (code >= 0xd800 && code <= 0xdbff && i + 1 < n) {\n      const code = string.charCodeAt(i + 1)\n\n      if (code >= 0xdc00 && code <= 0xdfff) {\n        length += 4\n        i++\n        continue\n      }\n    }\n\n    if (code <= 0x7f) length += 1\n    else if (code <= 0x7ff) length += 2\n    else length += 3\n  }\n\n  return length\n}\n\nlet toString\n\nif (typeof TextDecoder !== 'undefined') {\n  const decoder = new TextDecoder()\n\n  toString = function toString (buffer) {\n    return decoder.decode(buffer)\n  }\n} else {\n  toString = function toString (buffer) {\n    const len = buffer.byteLength\n\n    let output = ''\n    let i = 0\n\n    while (i < len) {\n      let byte = buffer[i]\n\n      if (byte <= 0x7f) {\n        output += String.fromCharCode(byte)\n        i++\n        continue\n      }\n\n      let bytesNeeded = 0\n      let codePoint = 0\n\n      if (byte <= 0xdf) {\n        bytesNeeded = 1\n        codePoint = byte & 0x1f\n      } else if (byte <= 0xef) {\n        bytesNeeded = 2\n        codePoint = byte & 0x0f\n      } else if (byte <= 0xf4) {\n        bytesNeeded = 3\n        codePoint = byte & 0x07\n      }\n\n      if (len - i - bytesNeeded > 0) {\n        let k = 0\n\n        while (k < bytesNeeded) {\n          byte = buffer[i + k + 1]\n          codePoint = (codePoint << 6) | (byte & 0x3f)\n          k += 1\n        }\n      } else {\n        codePoint = 0xfffd\n        bytesNeeded = len - i\n      }\n\n      output += String.fromCodePoint(codePoint)\n      i += bytesNeeded + 1\n    }\n\n    return output\n  }\n}\n\nlet write\n\nif (typeof TextEncoder !== 'undefined') {\n  const encoder = new TextEncoder()\n\n  write = function write (buffer, string, offset = 0, length = byteLength(string)) {\n    const len = Math.min(length, buffer.byteLength - offset)\n    encoder.encodeInto(string, buffer.subarray(offset, offset + len))\n    return len\n  }\n} else {\n  write = function write (buffer, string, offset = 0, length = byteLength(string)) {\n    const len = Math.min(length, buffer.byteLength - offset)\n\n    buffer = buffer.subarray(offset, offset + len)\n\n    let i = 0\n    let j = 0\n\n    while (i < string.length) {\n      const code = string.codePointAt(i)\n\n      if (code <= 0x7f) {\n        buffer[j++] = code\n        i++\n        continue\n      }\n\n      let count = 0\n      let bits = 0\n\n      if (code <= 0x7ff) {\n        count = 6\n        bits = 0xc0\n      } else if (code <= 0xffff) {\n        count = 12\n        bits = 0xe0\n      } else if (code <= 0x1fffff) {\n        count = 18\n        bits = 0xf0\n      }\n\n      buffer[j++] = bits | (code >> count)\n      count -= 6\n\n      while (count >= 0) {\n        buffer[j++] = 0x80 | ((code >> count) & 0x3f)\n        count -= 6\n      }\n\n      i += code >= 0x10000 ? 2 : 1\n    }\n\n    return len\n  }\n}\n\nmodule.exports = {\n  byteLength,\n  toString,\n  write\n}\n"},"lineCount":146}},"error":null,"hash":"17798e8c469bc9c3cd59ac76f7fe51f7","cacheData":{"env":{}}}