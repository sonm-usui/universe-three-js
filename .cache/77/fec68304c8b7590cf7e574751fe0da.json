{"id":"../node_modules/sodium-javascript/randombytes.js","dependencies":[{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/package.json","includedInParent":true,"mtime":1676236562742},{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/sodium-javascript/package.json","includedInParent":true,"mtime":1676236540657},{"name":"nanoassert","loc":{"line":1,"column":21,"index":21},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/sodium-javascript/randombytes.js","resolved":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/nanoassert/index.js"},{"name":"crypto","loc":{"line":24,"column":21,"index":701},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/sodium-javascript/randombytes.js","resolved":"/Users/sonamchoeda/.nvm/versions/node/v14.18.0/lib/node_modules/parcel-bundler/src/builtins/_empty.js"}],"generated":{"js":"var global = arguments[3];\nvar assert = require('nanoassert')\nvar randombytes = (function () {\n  var QUOTA = 65536 // limit for QuotaExceededException\n  var crypto = typeof global !== 'undefined' ? crypto = (global.crypto || global.msCrypto) : null\n\n  function browserBytes (out, n) {\n    for (var i = 0; i < n; i += QUOTA) {\n      crypto.getRandomValues(out.subarray(i, i + Math.min(n - i, QUOTA)))\n    }\n  }\n\n  function nodeBytes (out, n) {\n    out.set(crypto.randomBytes(n))\n  }\n\n  function noImpl () {\n    throw new Error('No secure random number generator available')\n  }\n\n  if (crypto && crypto.getRandomValues) {\n    return browserBytes\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto')\n    if (crypto && crypto.randomBytes) {\n      return nodeBytes\n    }\n  }\n\n  return noImpl\n})()\n\nObject.defineProperty(module.exports, 'randombytes', {\n  value: randombytes\n})\n\nmodule.exports.randombytes_buf = function (out) {\n  assert(out, 'out must be given')\n  randombytes(out, out.length)\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/sodium-javascript/randombytes.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}}],"sources":{"../node_modules/sodium-javascript/randombytes.js":"var assert = require('nanoassert')\nvar randombytes = (function () {\n  var QUOTA = 65536 // limit for QuotaExceededException\n  var crypto = typeof global !== 'undefined' ? crypto = (global.crypto || global.msCrypto) : null\n\n  function browserBytes (out, n) {\n    for (var i = 0; i < n; i += QUOTA) {\n      crypto.getRandomValues(out.subarray(i, i + Math.min(n - i, QUOTA)))\n    }\n  }\n\n  function nodeBytes (out, n) {\n    out.set(crypto.randomBytes(n))\n  }\n\n  function noImpl () {\n    throw new Error('No secure random number generator available')\n  }\n\n  if (crypto && crypto.getRandomValues) {\n    return browserBytes\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto')\n    if (crypto && crypto.randomBytes) {\n      return nodeBytes\n    }\n  }\n\n  return noImpl\n})()\n\nObject.defineProperty(module.exports, 'randombytes', {\n  value: randombytes\n})\n\nmodule.exports.randombytes_buf = function (out) {\n  assert(out, 'out must be given')\n  randombytes(out, out.length)\n}\n"},"lineCount":42}},"error":null,"hash":"93254c8541e96d8118ff53325527463d","cacheData":{"env":{}}}