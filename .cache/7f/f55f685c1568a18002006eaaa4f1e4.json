{"id":"../node_modules/hyperswarm/swarm.js","dependencies":[{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/package.json","includedInParent":true,"mtime":1676236562742},{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/hyperswarm/package.json","includedInParent":true,"mtime":1676236534679},{"name":"./lib/peer-info","loc":{"line":2,"column":25,"index":38},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/hyperswarm/swarm.js","resolved":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/hyperswarm/lib/peer-info.js"},{"name":"./lib/queue","loc":{"line":3,"column":26,"index":83},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/hyperswarm/swarm.js","resolved":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/hyperswarm/lib/queue.js"},{"name":"events","loc":{"line":4,"column":33,"index":131},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/hyperswarm/swarm.js","resolved":"/Users/sonamchoeda/.nvm/versions/node/v14.18.0/lib/node_modules/parcel-bundler/node_modules/events/events.js"},{"name":"@hyperswarm/network","loc":{"line":5,"column":24,"index":165},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/hyperswarm/swarm.js","resolved":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/@hyperswarm/network/index.js"},{"name":"buffer","parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/hyperswarm/swarm.js","resolved":"/Users/sonamchoeda/.nvm/versions/node/v14.18.0/lib/node_modules/parcel-bundler/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n'use strict'\nconst peerInfo = require('./lib/peer-info')\nconst peerQueue = require('./lib/queue')\nconst { EventEmitter } = require('events')\nconst network = require('@hyperswarm/network')\n\nconst MAX_SERVER_SOCKETS = Infinity\nconst MAX_CLIENT_SOCKETS = Infinity\nconst MAX_PEERS = 24\n\nconst ERR_DESTROYED = 'swarm has been destroyed'\nconst ERR_MISSING_KEY = 'key is required and must be a 32-byte buffer'\nconst ERR_JOIN_OPTS = 'join options must enable lookup, announce or both, but not neither'\n\nconst kDrain = Symbol('hyperswarm.drain')\nconst kIncrPeerCount = Symbol('hyperswarm.incrPeerCount')\nconst kDecrPeerCount = Symbol('hyperswarm.decrPeerCount')\nconst kQueue = Symbol('hyperswarm.queue')\nconst kLeave = Symbol('hyperswarm.leave')\nconst kFlush = Symbol('hyperswarm.flush')\nconst kStatus = Symbol('hyperswarm.statuses')\n\nmodule.exports = opts => new Swarm(opts)\n\nclass Swarm extends EventEmitter {\n  constructor (opts = {}) {\n    super()\n    const {\n      maxServerSockets = MAX_SERVER_SOCKETS,\n      maxClientSockets = MAX_CLIENT_SOCKETS,\n      maxPeers = MAX_PEERS,\n      bootstrap,\n      ephemeral,\n      validatePeer = () => true,\n      queue = {},\n      id,\n      port,\n      announcePort,\n      preferredPort\n    } = opts\n\n    this.network = network({\n      id,\n      bootstrap,\n      ephemeral,\n      port,\n      announcePort,\n      preferredPort,\n      announceLocalAddress: !!opts.announceLocalAddress,\n      bind: () => this.emit('listening'),\n      socket: (socket, isTCP) => {\n        const info = peerInfo(null, this[kQueue])\n        info.connected(socket, isTCP)\n        this.emit('connection', socket, info)\n        this.serverSockets += 1\n        this[kIncrPeerCount]()\n        socket.on('close', () => {\n          info.disconnected()\n          this.serverSockets -= 1\n          this.emit('disconnection', socket, info)\n          this[kDecrPeerCount]()\n        })\n      },\n      close: () => this.emit('close')\n    })\n\n    this.network.tcp.maxConnections = maxServerSockets\n    this.network.utp.maxConnections = maxServerSockets\n\n    this.destroyed = false\n    this.prioritisedInflight = 0\n    this.clientSockets = 0\n    this.serverSockets = 0\n    this.peers = 0\n\n    this.maxPeers = maxPeers\n    this.maxServerSockets = maxServerSockets\n    this.maxClientSockets = maxClientSockets\n\n    this.open = this.peers < this.maxPeers\n    this.connections = this.network.sockets\n\n    this.validatePeer = validatePeer\n\n    this[kStatus] = new Map()\n    this[kFlush] = []\n    this[kQueue] = peerQueue(queue)\n    this[kQueue].on('readable', this[kDrain](this[kQueue]))\n  }\n\n  [kDrain] (queue) {\n    const onAttempt = () => {\n      for (let i = 0; i < this[kFlush].length; i++) {\n        if (this.clientSockets >= this.maxClientSockets || --this[kFlush][i][0] <= 0) {\n          const cb = this[kFlush][i][1]\n          this[kFlush][i--] = this[kFlush][this[kFlush].length - 1]\n          this[kFlush].pop()\n          cb(null)\n        }\n      }\n    }\n    const onConnect = (info, prioritised) => (err, socket, isTCP) => {\n      if (prioritised) this.prioritisedInflight -= 1\n      if (err) {\n        this.clientSockets -= 1\n        this[kDecrPeerCount]()\n        queue.requeue(info)\n        drain()\n        onAttempt()\n        return\n      }\n      info.connected(socket, isTCP)\n      this.emit('connection', socket, info)\n      socket.on('close', () => {\n        info.disconnected()\n        this.clientSockets -= 1\n        this.emit('disconnection', socket, info)\n        this[kDecrPeerCount]()\n        queue.requeue(info)\n        setImmediate(drain)\n      })\n      drain()\n      onAttempt()\n    }\n    const drain = () => {\n      if (this.open === false) return\n      if (this.clientSockets >= this.maxClientSockets) return\n\n      while (true) {\n        const info = queue.shift()\n        if (!info) return\n\n        if (info.peer.topic) { // only connect to active topics ...\n          const domain = this.network.discovery._domain(info.peer.topic)\n          if (!this.network.discovery._domains.has(domain)) {\n            onAttempt()\n            continue\n          }\n        }\n\n        if (info.prioritised) this.prioritisedInflight += 1\n        this.clientSockets += 1\n        this[kIncrPeerCount]()\n        this.connect(info.peer, onConnect(info, info.prioritised))\n        return\n      }\n    }\n    return drain\n  }\n  [kIncrPeerCount] () {\n    this.peers += 1\n    this.open = this.peers < this.maxPeers\n    if (this.open === false) {\n      this.network.tcp.maxConnections = -1\n      this.network.utp.maxConnections = -1\n    }\n  }\n  [kDecrPeerCount] () {\n    this.peers -= 1\n    if (this.open) return\n    this.open = this.peers < this.maxPeers\n    // note: defensive conditional, to the best of knowledge\n    // and after some investigation, else branch should never happen\n    /* istanbul ignore else */\n    if (this.open === true) {\n      this.network.tcp.maxConnections = this.maxServerSockets\n      this.network.utp.maxConnections = this.maxServerSockets\n    }\n  }\n  address () {\n    if (this.destroyed) throw Error(ERR_DESTROYED)\n    return this.network.address()\n  }\n  listen (port, cb) {\n    if (this.destroyed) throw Error(ERR_DESTROYED)\n    this.network.bind(port, cb)\n  }\n  status (key) {\n    return this[kStatus].get(key.toString('hex')) || null\n  }\n  join (key, opts = {}, onjoin) {\n    if (this.destroyed) throw Error(ERR_DESTROYED)\n    if (typeof opts === 'function') return this.join(key, {}, opts)\n\n    const { network } = this\n\n    if (Buffer.isBuffer(key) === false || key.length !== 32) throw Error(ERR_MISSING_KEY)\n\n    const { announce = false, lookup = true } = opts\n\n    if (!announce && !lookup) throw Error(ERR_JOIN_OPTS)\n\n    this[kStatus].set(key.toString('hex'), { announce, lookup })\n    network.bind((err) => {\n      if (err) {\n        this.emit('error', err)\n        return\n      }\n      this[kLeave](key)\n      const topic = announce\n        ? network.announce(key, { lookup })\n        : network.lookup(key)\n\n      if (onjoin) topic.flush(onjoin)\n      topic.on('update', () => {\n        this.emit('updated', { key })\n      })\n      if (lookup) {\n        topic.on('peer', (peer) => {\n          if (!this.validatePeer(peer)) {\n            this.emit('peer-rejected', peer)\n            return\n          }\n          this.emit('peer', peer)\n          this[kQueue].add(peer)\n        })\n      }\n      this.emit('join', key, opts)\n    })\n  }\n  leave (key, onleave) {\n    if (Buffer.isBuffer(key) === false || key.length !== 32) throw Error(ERR_MISSING_KEY)\n    if (this.destroyed) return\n\n    this[kStatus].delete(key.toString('hex'))\n    this.network.bind((err) => {\n      if (err) return // don't emit this, as we are leaving anyway\n      this[kLeave](key, onleave)\n      this.emit('leave', key)\n    })\n  }\n  flush (cb) {\n    if (this.destroyed) throw Error(ERR_DESTROYED)\n    this.network.bind((err) => {\n      if (err) return cb(err)\n      this.network.discovery.flush(() => {\n        const prio = this[kQueue].prioritised + this.prioritisedInflight\n        if (prio === 0 || this.clientSockets >= this.maxClientSockets) cb()\n        else this[kFlush].push([prio, cb])\n      })\n    })\n  }\n\n  [kLeave] (key, onleave) {\n    const { network } = this\n\n    const domain = network.discovery._domain(key)\n    const topics = network.discovery._domains.get(domain)\n    if (!topics) return\n\n    for (const topic of topics) {\n      if (Buffer.compare(key, topic.key) === 0) {\n        topic.destroy()\n        if (onleave) topic.once('close', onleave)\n        break\n      }\n    }\n  }\n  remoteAddress () {\n    const disc = this.network.discovery\n    return disc && disc.dht.remoteAddress()\n  }\n  holepunchable () {\n    const disc = this.network.discovery\n    return disc && disc.dht.holepunchable()\n  }\n  connect (peer, cb) {\n    if (this.destroyed) throw Error(ERR_DESTROYED)\n    this.network.connect(peer, cb)\n  }\n  connectivity (cb) {\n    if (this.destroyed) throw Error(ERR_DESTROYED)\n    this.network.bind((err) => {\n      if (err) {\n        cb(err, {\n          bound: false,\n          boostrapped: false, // todo remove in next major\n          bootstrapped: false,\n          holepunched: false\n        })\n        return\n      }\n      this.network.discovery.holepunchable((err, holepunchable) => {\n        if (err) {\n          cb(err, {\n            bound: true,\n            boostrapped: false, // todo remove in next major\n            bootstrapped: false,\n            holepunched: false\n          })\n          return\n        }\n        cb(null, {\n          bound: true,\n          boostrapped: true, // todo remove in next major\n          bootstrapped: true,\n          holepunched: holepunchable\n        })\n      })\n    })\n  }\n  destroy (cb) {\n    this.destroyed = true\n    this[kQueue].destroy()\n    this.network.close(cb)\n    this[kStatus].clear()\n\n    const flush = this[kFlush]\n    this[kFlush] = []\n    for (const [, cb] of flush) cb(Error(ERR_DESTROYED))\n  }\n}\n\nmodule.exports.Swarm = Swarm\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/hyperswarm/swarm.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}}],"sources":{"../node_modules/hyperswarm/swarm.js":"'use strict'\nconst peerInfo = require('./lib/peer-info')\nconst peerQueue = require('./lib/queue')\nconst { EventEmitter } = require('events')\nconst network = require('@hyperswarm/network')\n\nconst MAX_SERVER_SOCKETS = Infinity\nconst MAX_CLIENT_SOCKETS = Infinity\nconst MAX_PEERS = 24\n\nconst ERR_DESTROYED = 'swarm has been destroyed'\nconst ERR_MISSING_KEY = 'key is required and must be a 32-byte buffer'\nconst ERR_JOIN_OPTS = 'join options must enable lookup, announce or both, but not neither'\n\nconst kDrain = Symbol('hyperswarm.drain')\nconst kIncrPeerCount = Symbol('hyperswarm.incrPeerCount')\nconst kDecrPeerCount = Symbol('hyperswarm.decrPeerCount')\nconst kQueue = Symbol('hyperswarm.queue')\nconst kLeave = Symbol('hyperswarm.leave')\nconst kFlush = Symbol('hyperswarm.flush')\nconst kStatus = Symbol('hyperswarm.statuses')\n\nmodule.exports = opts => new Swarm(opts)\n\nclass Swarm extends EventEmitter {\n  constructor (opts = {}) {\n    super()\n    const {\n      maxServerSockets = MAX_SERVER_SOCKETS,\n      maxClientSockets = MAX_CLIENT_SOCKETS,\n      maxPeers = MAX_PEERS,\n      bootstrap,\n      ephemeral,\n      validatePeer = () => true,\n      queue = {},\n      id,\n      port,\n      announcePort,\n      preferredPort\n    } = opts\n\n    this.network = network({\n      id,\n      bootstrap,\n      ephemeral,\n      port,\n      announcePort,\n      preferredPort,\n      announceLocalAddress: !!opts.announceLocalAddress,\n      bind: () => this.emit('listening'),\n      socket: (socket, isTCP) => {\n        const info = peerInfo(null, this[kQueue])\n        info.connected(socket, isTCP)\n        this.emit('connection', socket, info)\n        this.serverSockets += 1\n        this[kIncrPeerCount]()\n        socket.on('close', () => {\n          info.disconnected()\n          this.serverSockets -= 1\n          this.emit('disconnection', socket, info)\n          this[kDecrPeerCount]()\n        })\n      },\n      close: () => this.emit('close')\n    })\n\n    this.network.tcp.maxConnections = maxServerSockets\n    this.network.utp.maxConnections = maxServerSockets\n\n    this.destroyed = false\n    this.prioritisedInflight = 0\n    this.clientSockets = 0\n    this.serverSockets = 0\n    this.peers = 0\n\n    this.maxPeers = maxPeers\n    this.maxServerSockets = maxServerSockets\n    this.maxClientSockets = maxClientSockets\n\n    this.open = this.peers < this.maxPeers\n    this.connections = this.network.sockets\n\n    this.validatePeer = validatePeer\n\n    this[kStatus] = new Map()\n    this[kFlush] = []\n    this[kQueue] = peerQueue(queue)\n    this[kQueue].on('readable', this[kDrain](this[kQueue]))\n  }\n\n  [kDrain] (queue) {\n    const onAttempt = () => {\n      for (let i = 0; i < this[kFlush].length; i++) {\n        if (this.clientSockets >= this.maxClientSockets || --this[kFlush][i][0] <= 0) {\n          const cb = this[kFlush][i][1]\n          this[kFlush][i--] = this[kFlush][this[kFlush].length - 1]\n          this[kFlush].pop()\n          cb(null)\n        }\n      }\n    }\n    const onConnect = (info, prioritised) => (err, socket, isTCP) => {\n      if (prioritised) this.prioritisedInflight -= 1\n      if (err) {\n        this.clientSockets -= 1\n        this[kDecrPeerCount]()\n        queue.requeue(info)\n        drain()\n        onAttempt()\n        return\n      }\n      info.connected(socket, isTCP)\n      this.emit('connection', socket, info)\n      socket.on('close', () => {\n        info.disconnected()\n        this.clientSockets -= 1\n        this.emit('disconnection', socket, info)\n        this[kDecrPeerCount]()\n        queue.requeue(info)\n        setImmediate(drain)\n      })\n      drain()\n      onAttempt()\n    }\n    const drain = () => {\n      if (this.open === false) return\n      if (this.clientSockets >= this.maxClientSockets) return\n\n      while (true) {\n        const info = queue.shift()\n        if (!info) return\n\n        if (info.peer.topic) { // only connect to active topics ...\n          const domain = this.network.discovery._domain(info.peer.topic)\n          if (!this.network.discovery._domains.has(domain)) {\n            onAttempt()\n            continue\n          }\n        }\n\n        if (info.prioritised) this.prioritisedInflight += 1\n        this.clientSockets += 1\n        this[kIncrPeerCount]()\n        this.connect(info.peer, onConnect(info, info.prioritised))\n        return\n      }\n    }\n    return drain\n  }\n  [kIncrPeerCount] () {\n    this.peers += 1\n    this.open = this.peers < this.maxPeers\n    if (this.open === false) {\n      this.network.tcp.maxConnections = -1\n      this.network.utp.maxConnections = -1\n    }\n  }\n  [kDecrPeerCount] () {\n    this.peers -= 1\n    if (this.open) return\n    this.open = this.peers < this.maxPeers\n    // note: defensive conditional, to the best of knowledge\n    // and after some investigation, else branch should never happen\n    /* istanbul ignore else */\n    if (this.open === true) {\n      this.network.tcp.maxConnections = this.maxServerSockets\n      this.network.utp.maxConnections = this.maxServerSockets\n    }\n  }\n  address () {\n    if (this.destroyed) throw Error(ERR_DESTROYED)\n    return this.network.address()\n  }\n  listen (port, cb) {\n    if (this.destroyed) throw Error(ERR_DESTROYED)\n    this.network.bind(port, cb)\n  }\n  status (key) {\n    return this[kStatus].get(key.toString('hex')) || null\n  }\n  join (key, opts = {}, onjoin) {\n    if (this.destroyed) throw Error(ERR_DESTROYED)\n    if (typeof opts === 'function') return this.join(key, {}, opts)\n\n    const { network } = this\n\n    if (Buffer.isBuffer(key) === false || key.length !== 32) throw Error(ERR_MISSING_KEY)\n\n    const { announce = false, lookup = true } = opts\n\n    if (!announce && !lookup) throw Error(ERR_JOIN_OPTS)\n\n    this[kStatus].set(key.toString('hex'), { announce, lookup })\n    network.bind((err) => {\n      if (err) {\n        this.emit('error', err)\n        return\n      }\n      this[kLeave](key)\n      const topic = announce\n        ? network.announce(key, { lookup })\n        : network.lookup(key)\n\n      if (onjoin) topic.flush(onjoin)\n      topic.on('update', () => {\n        this.emit('updated', { key })\n      })\n      if (lookup) {\n        topic.on('peer', (peer) => {\n          if (!this.validatePeer(peer)) {\n            this.emit('peer-rejected', peer)\n            return\n          }\n          this.emit('peer', peer)\n          this[kQueue].add(peer)\n        })\n      }\n      this.emit('join', key, opts)\n    })\n  }\n  leave (key, onleave) {\n    if (Buffer.isBuffer(key) === false || key.length !== 32) throw Error(ERR_MISSING_KEY)\n    if (this.destroyed) return\n\n    this[kStatus].delete(key.toString('hex'))\n    this.network.bind((err) => {\n      if (err) return // don't emit this, as we are leaving anyway\n      this[kLeave](key, onleave)\n      this.emit('leave', key)\n    })\n  }\n  flush (cb) {\n    if (this.destroyed) throw Error(ERR_DESTROYED)\n    this.network.bind((err) => {\n      if (err) return cb(err)\n      this.network.discovery.flush(() => {\n        const prio = this[kQueue].prioritised + this.prioritisedInflight\n        if (prio === 0 || this.clientSockets >= this.maxClientSockets) cb()\n        else this[kFlush].push([prio, cb])\n      })\n    })\n  }\n\n  [kLeave] (key, onleave) {\n    const { network } = this\n\n    const domain = network.discovery._domain(key)\n    const topics = network.discovery._domains.get(domain)\n    if (!topics) return\n\n    for (const topic of topics) {\n      if (Buffer.compare(key, topic.key) === 0) {\n        topic.destroy()\n        if (onleave) topic.once('close', onleave)\n        break\n      }\n    }\n  }\n  remoteAddress () {\n    const disc = this.network.discovery\n    return disc && disc.dht.remoteAddress()\n  }\n  holepunchable () {\n    const disc = this.network.discovery\n    return disc && disc.dht.holepunchable()\n  }\n  connect (peer, cb) {\n    if (this.destroyed) throw Error(ERR_DESTROYED)\n    this.network.connect(peer, cb)\n  }\n  connectivity (cb) {\n    if (this.destroyed) throw Error(ERR_DESTROYED)\n    this.network.bind((err) => {\n      if (err) {\n        cb(err, {\n          bound: false,\n          boostrapped: false, // todo remove in next major\n          bootstrapped: false,\n          holepunched: false\n        })\n        return\n      }\n      this.network.discovery.holepunchable((err, holepunchable) => {\n        if (err) {\n          cb(err, {\n            bound: true,\n            boostrapped: false, // todo remove in next major\n            bootstrapped: false,\n            holepunched: false\n          })\n          return\n        }\n        cb(null, {\n          bound: true,\n          boostrapped: true, // todo remove in next major\n          bootstrapped: true,\n          holepunched: holepunchable\n        })\n      })\n    })\n  }\n  destroy (cb) {\n    this.destroyed = true\n    this[kQueue].destroy()\n    this.network.close(cb)\n    this[kStatus].clear()\n\n    const flush = this[kFlush]\n    this[kFlush] = []\n    for (const [, cb] of flush) cb(Error(ERR_DESTROYED))\n  }\n}\n\nmodule.exports.Swarm = Swarm\n"},"lineCount":316}},"error":null,"hash":"a15b84db7cf35f9cb01d61f74f17f84e","cacheData":{"env":{}}}