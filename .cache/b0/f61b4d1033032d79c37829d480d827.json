{"id":"../node_modules/xor-distance/index.js","dependencies":[{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/package.json","includedInParent":true,"mtime":1676236562742},{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/xor-distance/package.json","includedInParent":true,"mtime":1676236547016},{"name":"buffer","parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/xor-distance/index.js","resolved":"/Users/sonamchoeda/.nvm/versions/node/v14.18.0/lib/node_modules/parcel-bundler/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nmodule.exports = dist\n\nfunction dist (a, b) {\n  if (a.length !== b.length) throw new Error('Inputs should have the same length')\n  var result = Buffer.allocUnsafe(a.length)\n  for (var i = 0; i < a.length; i++) result[i] = a[i] ^ b[i]\n  return result\n}\n\ndist.compare = function compare (a, b) {\n  if (a.length !== b.length) throw new Error('Inputs should have the same length')\n  for (var i = 0; i < a.length; i++) {\n    if (a[i] === b[i]) continue\n    return a[i] < b[i] ? -1 : 1\n  }\n  return 0\n}\n\ndist.gt = function gt (a, b) {\n  return dist.compare(a, b) === 1\n}\n\ndist.lt = function lt (a, b) {\n  return dist.compare(a, b) === -1\n}\n\ndist.eq = function eq (a, b) {\n  return dist.compare(a, b) === 0\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/xor-distance/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/xor-distance/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/xor-distance/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/xor-distance/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/xor-distance/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/xor-distance/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/xor-distance/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/xor-distance/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/xor-distance/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/xor-distance/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/xor-distance/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/xor-distance/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/xor-distance/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/xor-distance/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/xor-distance/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/xor-distance/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/xor-distance/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/xor-distance/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/xor-distance/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/xor-distance/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/xor-distance/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/xor-distance/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/xor-distance/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/xor-distance/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/xor-distance/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/xor-distance/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/xor-distance/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/xor-distance/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/xor-distance/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/xor-distance/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}}],"sources":{"../node_modules/xor-distance/index.js":"module.exports = dist\n\nfunction dist (a, b) {\n  if (a.length !== b.length) throw new Error('Inputs should have the same length')\n  var result = Buffer.allocUnsafe(a.length)\n  for (var i = 0; i < a.length; i++) result[i] = a[i] ^ b[i]\n  return result\n}\n\ndist.compare = function compare (a, b) {\n  if (a.length !== b.length) throw new Error('Inputs should have the same length')\n  for (var i = 0; i < a.length; i++) {\n    if (a[i] === b[i]) continue\n    return a[i] < b[i] ? -1 : 1\n  }\n  return 0\n}\n\ndist.gt = function gt (a, b) {\n  return dist.compare(a, b) === 1\n}\n\ndist.lt = function lt (a, b) {\n  return dist.compare(a, b) === -1\n}\n\ndist.eq = function eq (a, b) {\n  return dist.compare(a, b) === 0\n}\n"},"lineCount":31}},"error":null,"hash":"d4e81d0a6d46d1da4b2b73d885da2106","cacheData":{"env":{}}}