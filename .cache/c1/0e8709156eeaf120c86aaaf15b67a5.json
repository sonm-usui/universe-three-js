{"id":"../node_modules/dat-node/lib/storage.js","dependencies":[{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/package.json","includedInParent":true,"mtime":1676236562742},{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/dat-node/package.json","includedInParent":true,"mtime":1676236531349},{"name":"fs","loc":{"line":1,"column":17,"index":17},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/dat-node/lib/storage.js","resolved":"/Users/sonamchoeda/.nvm/versions/node/v14.18.0/lib/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"path","loc":{"line":2,"column":19,"index":42},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/dat-node/lib/storage.js","resolved":"/Users/sonamchoeda/.nvm/versions/node/v14.18.0/lib/node_modules/parcel-bundler/node_modules/path-browserify/index.js"},{"name":"dat-storage","loc":{"line":3,"column":23,"index":73},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/dat-node/lib/storage.js","resolved":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/dat-storage/index.js"},{"name":"random-access-file","loc":{"line":5,"column":18,"index":159},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/dat-node/lib/storage.js","resolved":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/random-access-file/browser.js"},{"name":"random-access-memory","loc":{"line":6,"column":18,"index":199},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/dat-node/lib/storage.js","resolved":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/random-access-memory/index.js"}],"generated":{"js":"var fs = require('fs')\nvar path = require('path')\nvar datStore = require('dat-storage')\n// var secretStorage = require('dat-secret-storage')\nvar raf = require('random-access-file')\nvar ram = require('random-access-memory')\n\nmodule.exports = defaultStorage\n\n/**\n * Parse the storage argument and return storage for hyperdrive.\n * By default, uses dat-secret-storage to storage secret keys in user's home directory.\n * @param {string|object} storage - Storage for hyperdrive.\n *   `string` is a directory or file. Directory: `/my-data`, storage will be in `/my-data/.dat`.\n *   Single File: `/my-file.zip`, storage will be in memory.\n *   Object is a hyperdrive storage object `{metadata: fn, content: fn}`.\n * @param {object} [opts] - options\n * @param {Boolean} [opts.temp] - Use temporary storage (random-access-memory)\n * @returns {object} hyperdrive storage object\n */\nfunction defaultStorage (storage, opts) {\n  // Use custom storage or ram\n  if (typeof storage !== 'string') return storage\n  if (opts.temp) return ram\n  if (opts.latest === false) {\n    // Store as SLEEP files inluding content.data\n    return {\n      metadata: function (name, opts) {\n        // I don't think we want this, we may get multiple 'ogd' sources\n        // if (name === 'secret_key') return secretStorage()(path.join(storage, 'metadata.ogd'), {key: opts.key, discoveryKey: opts.discoveryKey})\n        return raf(path.join(storage, 'metadata.' + name))\n      },\n      content: function (name, opts) {\n        return raf(path.join(storage, 'content.' + name))\n      }\n    }\n  }\n\n  try {\n    // Store in .dat with secret in ~/.dat\n    if (fs.statSync(storage).isDirectory()) {\n      return datStore(storage, opts)\n    }\n  } catch (e) {\n    // Does not exist, make dir\n    try {\n      fs.mkdirSync(storage)\n    } catch (e) {\n      // Invalid path\n      throw new Error('Invalid storage path')\n    }\n    return datStore(storage, opts)\n  }\n  error()\n\n  function error () {\n    // TODO: single file sleep storage\n    throw new Error('Storage must be dir or opts.temp')\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/dat-node/lib/storage.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}}],"sources":{"../node_modules/dat-node/lib/storage.js":"var fs = require('fs')\nvar path = require('path')\nvar datStore = require('dat-storage')\n// var secretStorage = require('dat-secret-storage')\nvar raf = require('random-access-file')\nvar ram = require('random-access-memory')\n\nmodule.exports = defaultStorage\n\n/**\n * Parse the storage argument and return storage for hyperdrive.\n * By default, uses dat-secret-storage to storage secret keys in user's home directory.\n * @param {string|object} storage - Storage for hyperdrive.\n *   `string` is a directory or file. Directory: `/my-data`, storage will be in `/my-data/.dat`.\n *   Single File: `/my-file.zip`, storage will be in memory.\n *   Object is a hyperdrive storage object `{metadata: fn, content: fn}`.\n * @param {object} [opts] - options\n * @param {Boolean} [opts.temp] - Use temporary storage (random-access-memory)\n * @returns {object} hyperdrive storage object\n */\nfunction defaultStorage (storage, opts) {\n  // Use custom storage or ram\n  if (typeof storage !== 'string') return storage\n  if (opts.temp) return ram\n  if (opts.latest === false) {\n    // Store as SLEEP files inluding content.data\n    return {\n      metadata: function (name, opts) {\n        // I don't think we want this, we may get multiple 'ogd' sources\n        // if (name === 'secret_key') return secretStorage()(path.join(storage, 'metadata.ogd'), {key: opts.key, discoveryKey: opts.discoveryKey})\n        return raf(path.join(storage, 'metadata.' + name))\n      },\n      content: function (name, opts) {\n        return raf(path.join(storage, 'content.' + name))\n      }\n    }\n  }\n\n  try {\n    // Store in .dat with secret in ~/.dat\n    if (fs.statSync(storage).isDirectory()) {\n      return datStore(storage, opts)\n    }\n  } catch (e) {\n    // Does not exist, make dir\n    try {\n      fs.mkdirSync(storage)\n    } catch (e) {\n      // Invalid path\n      throw new Error('Invalid storage path')\n    }\n    return datStore(storage, opts)\n  }\n  error()\n\n  function error () {\n    // TODO: single file sleep storage\n    throw new Error('Storage must be dir or opts.temp')\n  }\n}\n"},"lineCount":61}},"error":null,"hash":"c6435b85f5316064b9efa5350af6d355","cacheData":{"env":{}}}