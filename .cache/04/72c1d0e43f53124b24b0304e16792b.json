{"id":"../node_modules/b4a/lib/hex.js","dependencies":[{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/package.json","includedInParent":true,"mtime":1676236562742},{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/b4a/package.json","includedInParent":true,"mtime":1676236539687}],"generated":{"js":"function byteLength (string) {\n  return string.length >>> 1\n}\n\nfunction toString (buffer) {\n  const len = buffer.byteLength\n\n  buffer = new DataView(buffer.buffer, buffer.byteOffset, len)\n\n  let result = ''\n  let i = 0\n\n  for (let n = len - (len % 4); i < n; i += 4) {\n    result += buffer.getUint32(i).toString(16).padStart(8, '0')\n  }\n\n  for (; i < len; i++) {\n    result += buffer.getUint8(i).toString(16).padStart(2, '0')\n  }\n\n  return result\n}\n\nfunction write (buffer, string, offset = 0, length = byteLength(string)) {\n  const len = Math.min(length, buffer.byteLength - offset)\n\n  for (let i = 0; i < len; i++) {\n    const a = hexValue(string.charCodeAt(i * 2))\n    const b = hexValue(string.charCodeAt(i * 2 + 1))\n\n    if (a === undefined || b === undefined) {\n      return buffer.subarray(0, i)\n    }\n\n    buffer[offset + i] = (a << 4) | b\n  }\n\n  return len\n}\n\nmodule.exports = {\n  byteLength,\n  toString,\n  write\n}\n\nfunction hexValue (char) {\n  if (char >= 0x30 && char <= 0x39) return char - 0x30\n  if (char >= 0x41 && char <= 0x46) return char - 0x41 + 10\n  if (char >= 0x61 && char <= 0x66) return char - 0x61 + 10\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/b4a/lib/hex.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/b4a/lib/hex.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}}],"sources":{"../node_modules/b4a/lib/hex.js":"function byteLength (string) {\n  return string.length >>> 1\n}\n\nfunction toString (buffer) {\n  const len = buffer.byteLength\n\n  buffer = new DataView(buffer.buffer, buffer.byteOffset, len)\n\n  let result = ''\n  let i = 0\n\n  for (let n = len - (len % 4); i < n; i += 4) {\n    result += buffer.getUint32(i).toString(16).padStart(8, '0')\n  }\n\n  for (; i < len; i++) {\n    result += buffer.getUint8(i).toString(16).padStart(2, '0')\n  }\n\n  return result\n}\n\nfunction write (buffer, string, offset = 0, length = byteLength(string)) {\n  const len = Math.min(length, buffer.byteLength - offset)\n\n  for (let i = 0; i < len; i++) {\n    const a = hexValue(string.charCodeAt(i * 2))\n    const b = hexValue(string.charCodeAt(i * 2 + 1))\n\n    if (a === undefined || b === undefined) {\n      return buffer.subarray(0, i)\n    }\n\n    buffer[offset + i] = (a << 4) | b\n  }\n\n  return len\n}\n\nmodule.exports = {\n  byteLength,\n  toString,\n  write\n}\n\nfunction hexValue (char) {\n  if (char >= 0x30 && char <= 0x39) return char - 0x30\n  if (char >= 0x41 && char <= 0x46) return char - 0x41 + 10\n  if (char >= 0x61 && char <= 0x66) return char - 0x61 + 10\n}\n"},"lineCount":52}},"error":null,"hash":"e8e51db73071bab845a6430f8bbd346b","cacheData":{"env":{}}}