{"id":"../node_modules/b4a/lib/base64.js","dependencies":[{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/package.json","includedInParent":true,"mtime":1676236562742},{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/b4a/package.json","includedInParent":true,"mtime":1676236539687}],"generated":{"js":"const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\nconst codes = new Uint8Array(256)\n\nfor (let i = 0; i < alphabet.length; i++) {\n  codes[alphabet.charCodeAt(i)] = i\n}\n\ncodes[/* - */ 0x2d] = 62\ncodes[/* _ */ 0x5f] = 63\n\nfunction byteLength (string) {\n  let len = string.length\n\n  if (string.charCodeAt(len - 1) === 0x3d) len--\n  if (len > 1 && string.charCodeAt(len - 1) === 0x3d) len--\n\n  return (len * 3) >>> 2\n}\n\nfunction toString (buffer) {\n  const len = buffer.byteLength\n\n  let result = ''\n\n  for (let i = 0; i < len; i += 3) {\n    result += (\n      alphabet[buffer[i] >> 2] +\n      alphabet[((buffer[i] & 3) << 4) | (buffer[i + 1] >> 4)] +\n      alphabet[((buffer[i + 1] & 15) << 2) | (buffer[i + 2] >> 6)] +\n      alphabet[buffer[i + 2] & 63]\n    )\n  }\n\n  if (len % 3 === 2) {\n    result = result.substring(0, result.length - 1) + '='\n  } else if (len % 3 === 1) {\n    result = result.substring(0, result.length - 2) + '=='\n  }\n\n  return result\n};\n\nfunction write (buffer, string, offset = 0, length = byteLength(string)) {\n  const len = Math.min(length, buffer.byteLength - offset)\n\n  for (let i = 0, j = 0; i < len; i += 4) {\n    const a = codes[string.charCodeAt(i)]\n    const b = codes[string.charCodeAt(i + 1)]\n    const c = codes[string.charCodeAt(i + 2)]\n    const d = codes[string.charCodeAt(i + 3)]\n\n    buffer[j++] = (a << 2) | (b >> 4)\n    buffer[j++] = ((b & 15) << 4) | (c >> 2)\n    buffer[j++] = ((c & 3) << 6) | (d & 63)\n  }\n\n  return len\n};\n\nmodule.exports = {\n  byteLength,\n  toString,\n  write\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/b4a/lib/base64.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/b4a/lib/base64.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}}],"sources":{"../node_modules/b4a/lib/base64.js":"const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\nconst codes = new Uint8Array(256)\n\nfor (let i = 0; i < alphabet.length; i++) {\n  codes[alphabet.charCodeAt(i)] = i\n}\n\ncodes[/* - */ 0x2d] = 62\ncodes[/* _ */ 0x5f] = 63\n\nfunction byteLength (string) {\n  let len = string.length\n\n  if (string.charCodeAt(len - 1) === 0x3d) len--\n  if (len > 1 && string.charCodeAt(len - 1) === 0x3d) len--\n\n  return (len * 3) >>> 2\n}\n\nfunction toString (buffer) {\n  const len = buffer.byteLength\n\n  let result = ''\n\n  for (let i = 0; i < len; i += 3) {\n    result += (\n      alphabet[buffer[i] >> 2] +\n      alphabet[((buffer[i] & 3) << 4) | (buffer[i + 1] >> 4)] +\n      alphabet[((buffer[i + 1] & 15) << 2) | (buffer[i + 2] >> 6)] +\n      alphabet[buffer[i + 2] & 63]\n    )\n  }\n\n  if (len % 3 === 2) {\n    result = result.substring(0, result.length - 1) + '='\n  } else if (len % 3 === 1) {\n    result = result.substring(0, result.length - 2) + '=='\n  }\n\n  return result\n};\n\nfunction write (buffer, string, offset = 0, length = byteLength(string)) {\n  const len = Math.min(length, buffer.byteLength - offset)\n\n  for (let i = 0, j = 0; i < len; i += 4) {\n    const a = codes[string.charCodeAt(i)]\n    const b = codes[string.charCodeAt(i + 1)]\n    const c = codes[string.charCodeAt(i + 2)]\n    const d = codes[string.charCodeAt(i + 3)]\n\n    buffer[j++] = (a << 2) | (b >> 4)\n    buffer[j++] = ((b & 15) << 4) | (c >> 2)\n    buffer[j++] = ((c & 3) << 6) | (d & 63)\n  }\n\n  return len\n};\n\nmodule.exports = {\n  byteLength,\n  toString,\n  write\n}\n"},"lineCount":66}},"error":null,"hash":"312ff614a321bb5d65a112414292e9b6","cacheData":{"env":{}}}