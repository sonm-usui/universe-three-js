{"id":"../node_modules/dat-link-resolve/index.js","dependencies":[{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/package.json","includedInParent":true,"mtime":1676236562742},{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/dat-link-resolve/package.json","includedInParent":true,"mtime":1676236530291},{"name":"assert","loc":{"line":1,"column":21,"index":21},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/dat-link-resolve/index.js","resolved":"/Users/sonamchoeda/.nvm/versions/node/v14.18.0/lib/node_modules/parcel-bundler/node_modules/assert/assert.js"},{"name":"dat-encoding","loc":{"line":2,"column":24,"index":55},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/dat-link-resolve/index.js","resolved":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/dat-encoding/index.js"},{"name":"simple-get","loc":{"line":3,"column":18,"index":95},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/dat-link-resolve/index.js","resolved":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/simple-get/index.js"},{"name":"dat-dns","loc":{"line":4,"column":21,"index":130},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/dat-link-resolve/index.js","resolved":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/dat-dns/index.js"},{"name":"debug","loc":{"line":5,"column":20,"index":163},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/dat-link-resolve/index.js","resolved":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/debug/src/browser.js"}],"generated":{"js":"var assert = require('assert')\nvar stringKey = require('dat-encoding').toStr\nvar get = require('simple-get')\nvar datDns = require('dat-dns')()\nvar debug = require('debug')('dat-link-resolve')\n\nmodule.exports = resolve\n\nfunction resolve (link, cb) {\n  assert.ok(link, 'dat-link-resolve: link required')\n  assert.strictEqual(typeof cb, 'function', 'dat-link-resolve: callback required')\n\n  var key = null\n\n  try {\n    // validates + removes dat://\n    // also works for http urls with keys in them\n    key = stringKey(link)\n  } catch (e) {\n    lookup()\n    return\n  }\n  cb(null, key)\n\n  function lookup () {\n    // if it starts with http or dat: use as is, otherwise prepend http://\n    var urlLink = (link.indexOf('http') && link.indexOf('dat:')) ? ('http://' + link) : link\n\n    function resolveName () {\n      datDns.resolveName(urlLink, function (err, key) {\n        debug('resolveName', urlLink, err, key)\n        if (key) return cb(null, key)\n        if (err) debug('datDns.resolveName() error')\n        cb(err)\n      })\n    }\n\n    debug('resolveKey', link, urlLink)\n    get({\n      url: urlLink.replace('dat://', 'http://'),\n      json: true,\n      timeout: 1500\n    }, function (err, resp, body) {\n      // no ressource at given URL\n      if (err || resp.statusCode !== 200) {\n        return resolveName()\n      }\n\n      // first check if key is in header response\n      key = resp.headers['hyperdrive-key'] || resp.headers['dat-key']\n      if (key) {\n        debug('Received key from http header:', key)\n        return cb(null, key)\n      }\n\n      // else fall back to parsing the body\n      try {\n        key = stringKey(body.url)\n        debug('Received key via json:', key, typeof body, body && typeof body.url)\n        if (key) return cb(null, key)\n      } catch (e) {\n        // fall back to datDns\n        resolveName()\n      }\n    })\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/dat-link-resolve/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}}],"sources":{"../node_modules/dat-link-resolve/index.js":"var assert = require('assert')\nvar stringKey = require('dat-encoding').toStr\nvar get = require('simple-get')\nvar datDns = require('dat-dns')()\nvar debug = require('debug')('dat-link-resolve')\n\nmodule.exports = resolve\n\nfunction resolve (link, cb) {\n  assert.ok(link, 'dat-link-resolve: link required')\n  assert.strictEqual(typeof cb, 'function', 'dat-link-resolve: callback required')\n\n  var key = null\n\n  try {\n    // validates + removes dat://\n    // also works for http urls with keys in them\n    key = stringKey(link)\n  } catch (e) {\n    lookup()\n    return\n  }\n  cb(null, key)\n\n  function lookup () {\n    // if it starts with http or dat: use as is, otherwise prepend http://\n    var urlLink = (link.indexOf('http') && link.indexOf('dat:')) ? ('http://' + link) : link\n\n    function resolveName () {\n      datDns.resolveName(urlLink, function (err, key) {\n        debug('resolveName', urlLink, err, key)\n        if (key) return cb(null, key)\n        if (err) debug('datDns.resolveName() error')\n        cb(err)\n      })\n    }\n\n    debug('resolveKey', link, urlLink)\n    get({\n      url: urlLink.replace('dat://', 'http://'),\n      json: true,\n      timeout: 1500\n    }, function (err, resp, body) {\n      // no ressource at given URL\n      if (err || resp.statusCode !== 200) {\n        return resolveName()\n      }\n\n      // first check if key is in header response\n      key = resp.headers['hyperdrive-key'] || resp.headers['dat-key']\n      if (key) {\n        debug('Received key from http header:', key)\n        return cb(null, key)\n      }\n\n      // else fall back to parsing the body\n      try {\n        key = stringKey(body.url)\n        debug('Received key via json:', key, typeof body, body && typeof body.url)\n        if (key) return cb(null, key)\n      } catch (e) {\n        // fall back to datDns\n        resolveName()\n      }\n    })\n  }\n}\n"},"lineCount":68}},"error":null,"hash":"af74a51698c112fa696ea0561c5e7dc5","cacheData":{"env":{}}}