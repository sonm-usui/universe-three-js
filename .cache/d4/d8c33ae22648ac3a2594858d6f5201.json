{"id":"../node_modules/simple-get/index.js","dependencies":[{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/package.json","includedInParent":true,"mtime":1676236562742},{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/simple-get/package.json","includedInParent":true,"mtime":1676236533626},{"name":"simple-concat","loc":{"line":3,"column":23,"index":51},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/simple-get/index.js","resolved":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/simple-concat/index.js"},{"name":"decompress-response","loc":{"line":4,"column":35,"index":103},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/simple-get/index.js","resolved":"/Users/sonamchoeda/.nvm/versions/node/v14.18.0/lib/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"http","loc":{"line":5,"column":21,"index":178},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/simple-get/index.js","resolved":"/Users/sonamchoeda/.nvm/versions/node/v14.18.0/lib/node_modules/parcel-bundler/node_modules/stream-http/index.js"},{"name":"https","loc":{"line":6,"column":22,"index":208},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/simple-get/index.js","resolved":"/Users/sonamchoeda/.nvm/versions/node/v14.18.0/lib/node_modules/parcel-bundler/node_modules/https-browserify/index.js"},{"name":"once","loc":{"line":7,"column":21,"index":238},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/simple-get/index.js","resolved":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/once/once.js"},{"name":"querystring","loc":{"line":8,"column":28,"index":274},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/simple-get/index.js","resolved":"/Users/sonamchoeda/.nvm/versions/node/v14.18.0/lib/node_modules/parcel-bundler/node_modules/querystring-es3/index.js"},{"name":"url","loc":{"line":9,"column":20,"index":309},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/simple-get/index.js","resolved":"/Users/sonamchoeda/.nvm/versions/node/v14.18.0/lib/node_modules/parcel-bundler/node_modules/url/url.js"},{"name":"buffer","parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/simple-get/index.js","resolved":"/Users/sonamchoeda/.nvm/versions/node/v14.18.0/lib/node_modules/parcel-bundler/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nmodule.exports = simpleGet\n\nconst concat = require('simple-concat')\nconst decompressResponse = require('decompress-response') // excluded from browser build\nconst http = require('http')\nconst https = require('https')\nconst once = require('once')\nconst querystring = require('querystring')\nconst url = require('url')\n\nconst isStream = o => o !== null && typeof o === 'object' && typeof o.pipe === 'function'\n\nfunction simpleGet (opts, cb) {\n  opts = Object.assign({ maxRedirects: 10 }, typeof opts === 'string' ? { url: opts } : opts)\n  cb = once(cb)\n\n  if (opts.url) {\n    const { hostname, port, protocol, auth, path } = url.parse(opts.url) // eslint-disable-line node/no-deprecated-api\n    delete opts.url\n    if (!hostname && !port && !protocol && !auth) opts.path = path // Relative redirect\n    else Object.assign(opts, { hostname, port, protocol, auth, path }) // Absolute redirect\n  }\n\n  const headers = { 'accept-encoding': 'gzip, deflate' }\n  if (opts.headers) Object.keys(opts.headers).forEach(k => (headers[k.toLowerCase()] = opts.headers[k]))\n  opts.headers = headers\n\n  let body\n  if (opts.body) {\n    body = opts.json && !isStream(opts.body) ? JSON.stringify(opts.body) : opts.body\n  } else if (opts.form) {\n    body = typeof opts.form === 'string' ? opts.form : querystring.stringify(opts.form)\n    opts.headers['content-type'] = 'application/x-www-form-urlencoded'\n  }\n\n  if (body) {\n    if (!opts.method) opts.method = 'POST'\n    if (!isStream(body)) opts.headers['content-length'] = Buffer.byteLength(body)\n    if (opts.json && !opts.form) opts.headers['content-type'] = 'application/json'\n  }\n  delete opts.body; delete opts.form\n\n  if (opts.json) opts.headers.accept = 'application/json'\n  if (opts.method) opts.method = opts.method.toUpperCase()\n\n  const originalHost = opts.hostname // hostname before potential redirect\n  const protocol = opts.protocol === 'https:' ? https : http // Support http/https urls\n  const req = protocol.request(opts, res => {\n    if (opts.followRedirects !== false && res.statusCode >= 300 && res.statusCode < 400 && res.headers.location) {\n      opts.url = res.headers.location // Follow 3xx redirects\n      delete opts.headers.host // Discard `host` header on redirect (see #32)\n      res.resume() // Discard response\n\n      const redirectHost = url.parse(opts.url).hostname // eslint-disable-line node/no-deprecated-api\n      // If redirected host is different than original host, drop headers to prevent cookie leak (#73)\n      if (redirectHost !== null && redirectHost !== originalHost) {\n        delete opts.headers.cookie\n        delete opts.headers.authorization\n      }\n\n      if (opts.method === 'POST' && [301, 302].includes(res.statusCode)) {\n        opts.method = 'GET' // On 301/302 redirect, change POST to GET (see #35)\n        delete opts.headers['content-length']; delete opts.headers['content-type']\n      }\n\n      if (opts.maxRedirects-- === 0) return cb(new Error('too many redirects'))\n      else return simpleGet(opts, cb)\n    }\n\n    const tryUnzip = typeof decompressResponse === 'function' && opts.method !== 'HEAD'\n    cb(null, tryUnzip ? decompressResponse(res) : res)\n  })\n  req.on('timeout', () => {\n    req.abort()\n    cb(new Error('Request timed out'))\n  })\n  req.on('error', cb)\n\n  if (isStream(body)) body.on('error', cb).pipe(req)\n  else req.end(body)\n\n  return req\n}\n\nsimpleGet.concat = (opts, cb) => {\n  return simpleGet(opts, (err, res) => {\n    if (err) return cb(err)\n    concat(res, (err, data) => {\n      if (err) return cb(err)\n      if (opts.json) {\n        try {\n          data = JSON.parse(data.toString())\n        } catch (err) {\n          return cb(err, res, data)\n        }\n      }\n      cb(null, res, data)\n    })\n  })\n}\n\n;['get', 'post', 'put', 'patch', 'head', 'delete'].forEach(method => {\n  simpleGet[method] = (opts, cb) => {\n    if (typeof opts === 'string') opts = { url: opts }\n    return simpleGet(Object.assign({ method: method.toUpperCase() }, opts), cb)\n  }\n})\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/simple-get/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/simple-get/index.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}}],"sources":{"../node_modules/simple-get/index.js":"module.exports = simpleGet\n\nconst concat = require('simple-concat')\nconst decompressResponse = require('decompress-response') // excluded from browser build\nconst http = require('http')\nconst https = require('https')\nconst once = require('once')\nconst querystring = require('querystring')\nconst url = require('url')\n\nconst isStream = o => o !== null && typeof o === 'object' && typeof o.pipe === 'function'\n\nfunction simpleGet (opts, cb) {\n  opts = Object.assign({ maxRedirects: 10 }, typeof opts === 'string' ? { url: opts } : opts)\n  cb = once(cb)\n\n  if (opts.url) {\n    const { hostname, port, protocol, auth, path } = url.parse(opts.url) // eslint-disable-line node/no-deprecated-api\n    delete opts.url\n    if (!hostname && !port && !protocol && !auth) opts.path = path // Relative redirect\n    else Object.assign(opts, { hostname, port, protocol, auth, path }) // Absolute redirect\n  }\n\n  const headers = { 'accept-encoding': 'gzip, deflate' }\n  if (opts.headers) Object.keys(opts.headers).forEach(k => (headers[k.toLowerCase()] = opts.headers[k]))\n  opts.headers = headers\n\n  let body\n  if (opts.body) {\n    body = opts.json && !isStream(opts.body) ? JSON.stringify(opts.body) : opts.body\n  } else if (opts.form) {\n    body = typeof opts.form === 'string' ? opts.form : querystring.stringify(opts.form)\n    opts.headers['content-type'] = 'application/x-www-form-urlencoded'\n  }\n\n  if (body) {\n    if (!opts.method) opts.method = 'POST'\n    if (!isStream(body)) opts.headers['content-length'] = Buffer.byteLength(body)\n    if (opts.json && !opts.form) opts.headers['content-type'] = 'application/json'\n  }\n  delete opts.body; delete opts.form\n\n  if (opts.json) opts.headers.accept = 'application/json'\n  if (opts.method) opts.method = opts.method.toUpperCase()\n\n  const originalHost = opts.hostname // hostname before potential redirect\n  const protocol = opts.protocol === 'https:' ? https : http // Support http/https urls\n  const req = protocol.request(opts, res => {\n    if (opts.followRedirects !== false && res.statusCode >= 300 && res.statusCode < 400 && res.headers.location) {\n      opts.url = res.headers.location // Follow 3xx redirects\n      delete opts.headers.host // Discard `host` header on redirect (see #32)\n      res.resume() // Discard response\n\n      const redirectHost = url.parse(opts.url).hostname // eslint-disable-line node/no-deprecated-api\n      // If redirected host is different than original host, drop headers to prevent cookie leak (#73)\n      if (redirectHost !== null && redirectHost !== originalHost) {\n        delete opts.headers.cookie\n        delete opts.headers.authorization\n      }\n\n      if (opts.method === 'POST' && [301, 302].includes(res.statusCode)) {\n        opts.method = 'GET' // On 301/302 redirect, change POST to GET (see #35)\n        delete opts.headers['content-length']; delete opts.headers['content-type']\n      }\n\n      if (opts.maxRedirects-- === 0) return cb(new Error('too many redirects'))\n      else return simpleGet(opts, cb)\n    }\n\n    const tryUnzip = typeof decompressResponse === 'function' && opts.method !== 'HEAD'\n    cb(null, tryUnzip ? decompressResponse(res) : res)\n  })\n  req.on('timeout', () => {\n    req.abort()\n    cb(new Error('Request timed out'))\n  })\n  req.on('error', cb)\n\n  if (isStream(body)) body.on('error', cb).pipe(req)\n  else req.end(body)\n\n  return req\n}\n\nsimpleGet.concat = (opts, cb) => {\n  return simpleGet(opts, (err, res) => {\n    if (err) return cb(err)\n    concat(res, (err, data) => {\n      if (err) return cb(err)\n      if (opts.json) {\n        try {\n          data = JSON.parse(data.toString())\n        } catch (err) {\n          return cb(err, res, data)\n        }\n      }\n      cb(null, res, data)\n    })\n  })\n}\n\n;['get', 'post', 'put', 'patch', 'head', 'delete'].forEach(method => {\n  simpleGet[method] = (opts, cb) => {\n    if (typeof opts === 'string') opts = { url: opts }\n    return simpleGet(Object.assign({ method: method.toUpperCase() }, opts), cb)\n  }\n})\n"},"lineCount":109}},"error":null,"hash":"2789969ed94aa05abc7f38d8194c3c38","cacheData":{"env":{}}}