{"id":"../node_modules/hyperswarm/lib/peer-info.js","dependencies":[{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/package.json","includedInParent":true,"mtime":1676236562742},{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/hyperswarm/package.json","includedInParent":true,"mtime":1676236534679},{"name":"events","loc":{"line":2,"column":33,"index":46},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/hyperswarm/lib/peer-info.js","resolved":"/Users/sonamchoeda/.nvm/versions/node/v14.18.0/lib/node_modules/parcel-bundler/node_modules/events/events.js"},{"name":"buffer","parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/hyperswarm/lib/peer-info.js","resolved":"/Users/sonamchoeda/.nvm/versions/node/v14.18.0/lib/node_modules/parcel-bundler/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n'use strict'\nconst { EventEmitter } = require('events')\n\nmodule.exports = (peer, queue) => new PeerInfo(peer, queue)\n\nconst PROVEN = 0b1\nconst RECONNECT = 0b10\nconst BANNED = 0b100\nconst ACTIVE = 0b1000\nconst TRIED = 0b10000\nconst FIREWALLED = 0b100000\n\nconst BANNED_OR_ACTIVE = BANNED | ACTIVE\nconst ACTIVE_OR_TRIED = ACTIVE | TRIED\nconst EMPTY = Buffer.alloc(32)\n\nclass PeerInfo extends EventEmitter {\n  constructor (peer = null, queue) {\n    super()\n    this.priority = (peer && peer.local) ? 3 : (peer && peer.to && peer.to.host === peer.host) ? 1 : 2\n    this.status = RECONNECT | FIREWALLED\n    this.retries = this.priority === 1 ? 3 : 0\n    this.peer = peer\n    this.client = peer !== null\n    this.stream = null\n    this.duplicate = false\n    this.topics = []\n    this._seenTopics = new Set()\n    this._index = 0\n    this._queue = queue\n    this._dedup = null // set by the queue\n  }\n\n  get prioritised () {\n    return this.priority >= 2\n  }\n\n  get type () {\n    return this.status & FIREWALLED ? 'utp' : 'tcp'\n  }\n\n  get firewalled () {\n    return !!(this.status & FIREWALLED)\n  }\n\n  get banned () {\n    return !!(this.status & BANNED)\n  }\n\n  deduplicate (remoteId, localId = EMPTY) {\n    return this._queue.deduplicate(remoteId, localId, this)\n  }\n\n  backoff () {\n    // server can not backoff:\n    if (this.client === false) return\n    // calling requeue will increase\n    // retries\n    this.requeue()\n\n    if (this.status & BANNED) return false\n    if (this.retries > 3) return false\n    // set new priority based on retry count\n    this.priority = priority(this)\n\n    // return value of update\n    // indicates whether backoff was possible\n    return true\n  }\n\n  reconnect (val) {\n    if (val) this.status |= RECONNECT\n    else this.status &= ~RECONNECT\n  }\n\n  active (val) {\n    if (val) this.status |= ACTIVE_OR_TRIED\n    else this.status &= ~ACTIVE\n  }\n\n  connected (stream, isTCP) {\n    if (isTCP) this.status &= ~FIREWALLED\n    this.status |= PROVEN\n    this.stream = stream\n    this.retries = 0\n    if (this.status & BANNED) this.ban()\n  }\n\n  disconnected () {\n    this.stream = null\n    // The info object is reused after disconnection, so we need to clear registered listeners/topics.\n    this.topics = []\n    this.removeAllListeners('topic')\n    if (this._queue) this._queue.disconnected(this)\n  }\n\n  topic (topic) {\n    const hex = topic.toString('hex')\n    if (this._seenTopics.has(hex)) return\n    this._seenTopics.add(hex)\n    this.topics.push(topic)\n    this.emit('topic', topic)\n  }\n\n  update () {\n    if (this.status & BANNED_OR_ACTIVE) return false\n    if (this.retries > 3) return false\n    this.priority = priority(this)\n    return true\n  }\n\n  ban (soft) {\n    if (soft) {\n      this.status |= BANNED\n      if (this.stream && !this.stream.destroyed) this.stream.end()\n      this.disconnected()\n    } else {\n      this.destroy(new Error('Peer was banned'))\n    }\n  }\n\n  destroy (err) {\n    this.status |= BANNED\n    if (this.stream && !this.stream.destroyed) this.stream.destroy(err)\n    this.disconnected()\n  }\n\n  requeue () {\n    if (this.status & BANNED) return -1\n    if (!(this.status & RECONNECT)) return -1\n    if (this.retries >= 3) {\n      // if we don't increment retries past 3\n      // retries will never be > 3 in update method\n      this.retries++\n      return -1\n    }\n    return this.retries++\n  }\n}\n\nfunction priority (info) {\n  if ((info.status & TRIED) && !(info.status & PROVEN)) return 0\n  if (info.retries === 3) return 1\n  if (info.retries === 2) return 4\n  if (info.retries === 1) return 5\n  return (info.peer && info.peer.local) ? 3 : 2\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/hyperswarm/lib/peer-info.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}}],"sources":{"../node_modules/hyperswarm/lib/peer-info.js":"'use strict'\nconst { EventEmitter } = require('events')\n\nmodule.exports = (peer, queue) => new PeerInfo(peer, queue)\n\nconst PROVEN = 0b1\nconst RECONNECT = 0b10\nconst BANNED = 0b100\nconst ACTIVE = 0b1000\nconst TRIED = 0b10000\nconst FIREWALLED = 0b100000\n\nconst BANNED_OR_ACTIVE = BANNED | ACTIVE\nconst ACTIVE_OR_TRIED = ACTIVE | TRIED\nconst EMPTY = Buffer.alloc(32)\n\nclass PeerInfo extends EventEmitter {\n  constructor (peer = null, queue) {\n    super()\n    this.priority = (peer && peer.local) ? 3 : (peer && peer.to && peer.to.host === peer.host) ? 1 : 2\n    this.status = RECONNECT | FIREWALLED\n    this.retries = this.priority === 1 ? 3 : 0\n    this.peer = peer\n    this.client = peer !== null\n    this.stream = null\n    this.duplicate = false\n    this.topics = []\n    this._seenTopics = new Set()\n    this._index = 0\n    this._queue = queue\n    this._dedup = null // set by the queue\n  }\n\n  get prioritised () {\n    return this.priority >= 2\n  }\n\n  get type () {\n    return this.status & FIREWALLED ? 'utp' : 'tcp'\n  }\n\n  get firewalled () {\n    return !!(this.status & FIREWALLED)\n  }\n\n  get banned () {\n    return !!(this.status & BANNED)\n  }\n\n  deduplicate (remoteId, localId = EMPTY) {\n    return this._queue.deduplicate(remoteId, localId, this)\n  }\n\n  backoff () {\n    // server can not backoff:\n    if (this.client === false) return\n    // calling requeue will increase\n    // retries\n    this.requeue()\n\n    if (this.status & BANNED) return false\n    if (this.retries > 3) return false\n    // set new priority based on retry count\n    this.priority = priority(this)\n\n    // return value of update\n    // indicates whether backoff was possible\n    return true\n  }\n\n  reconnect (val) {\n    if (val) this.status |= RECONNECT\n    else this.status &= ~RECONNECT\n  }\n\n  active (val) {\n    if (val) this.status |= ACTIVE_OR_TRIED\n    else this.status &= ~ACTIVE\n  }\n\n  connected (stream, isTCP) {\n    if (isTCP) this.status &= ~FIREWALLED\n    this.status |= PROVEN\n    this.stream = stream\n    this.retries = 0\n    if (this.status & BANNED) this.ban()\n  }\n\n  disconnected () {\n    this.stream = null\n    // The info object is reused after disconnection, so we need to clear registered listeners/topics.\n    this.topics = []\n    this.removeAllListeners('topic')\n    if (this._queue) this._queue.disconnected(this)\n  }\n\n  topic (topic) {\n    const hex = topic.toString('hex')\n    if (this._seenTopics.has(hex)) return\n    this._seenTopics.add(hex)\n    this.topics.push(topic)\n    this.emit('topic', topic)\n  }\n\n  update () {\n    if (this.status & BANNED_OR_ACTIVE) return false\n    if (this.retries > 3) return false\n    this.priority = priority(this)\n    return true\n  }\n\n  ban (soft) {\n    if (soft) {\n      this.status |= BANNED\n      if (this.stream && !this.stream.destroyed) this.stream.end()\n      this.disconnected()\n    } else {\n      this.destroy(new Error('Peer was banned'))\n    }\n  }\n\n  destroy (err) {\n    this.status |= BANNED\n    if (this.stream && !this.stream.destroyed) this.stream.destroy(err)\n    this.disconnected()\n  }\n\n  requeue () {\n    if (this.status & BANNED) return -1\n    if (!(this.status & RECONNECT)) return -1\n    if (this.retries >= 3) {\n      // if we don't increment retries past 3\n      // retries will never be > 3 in update method\n      this.retries++\n      return -1\n    }\n    return this.retries++\n  }\n}\n\nfunction priority (info) {\n  if ((info.status & TRIED) && !(info.status & PROVEN)) return 0\n  if (info.retries === 3) return 1\n  if (info.retries === 2) return 4\n  if (info.retries === 1) return 5\n  return (info.peer && info.peer.local) ? 3 : 2\n}\n"},"lineCount":149}},"error":null,"hash":"38ff7cf62832aae28a1d5e6b4d5fcc3b","cacheData":{"env":{}}}