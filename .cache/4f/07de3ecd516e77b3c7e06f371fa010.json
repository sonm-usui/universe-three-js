{"id":"../node_modules/hypercore/lib/replicate.js","dependencies":[{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/package.json","includedInParent":true,"mtime":1676236562742},{"name":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/hypercore/package.json","includedInParent":true,"mtime":1676236539120},{"name":"hypercore-protocol","loc":{"line":1,"column":23,"index":23},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/hypercore/lib/replicate.js","resolved":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/hypercore-protocol/index.js"},{"name":"fast-bitfield","loc":{"line":2,"column":23,"index":68},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/hypercore/lib/replicate.js","resolved":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/fast-bitfield/index.js"},{"name":"unordered-set","loc":{"line":3,"column":18,"index":103},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/hypercore/lib/replicate.js","resolved":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/unordered-set/index.js"},{"name":"bitfield-rle","loc":{"line":4,"column":18,"index":138},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/hypercore/lib/replicate.js","resolved":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/bitfield-rle/index.js"},{"name":"./safe-buffer-equals","loc":{"line":5,"column":31,"index":194},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/hypercore/lib/replicate.js","resolved":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/hypercore/lib/safe-buffer-equals.js"},{"name":"./tree-index","loc":{"line":6,"column":24,"index":242},"parent":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/hypercore/lib/replicate.js","resolved":"/Users/sonamchoeda/Desktop/REACT-PROJECTS/three-js/node_modules/hypercore/lib/tree-index.js"}],"generated":{"js":"var protocol = require('hypercore-protocol')\nvar bitfield = require('fast-bitfield')\nvar set = require('unordered-set')\nvar rle = require('bitfield-rle').align(4)\nvar safeBufferEquals = require('./safe-buffer-equals')\nvar treeIndex = require('./tree-index')\n\nvar EMPTY = new Uint8Array(1024)\n\nmodule.exports = replicate\n\nfunction replicate (feed, opts) {\n  feed.ifAvailable.wait()\n  var stream = opts.stream\n\n  if (!stream) {\n    if (!opts.expectedFeeds) opts.expectedFeeds = 1\n    if (!opts.id) opts.id = feed.id\n    stream = protocol(opts)\n  }\n\n  if (feed.opened) onready(null)\n  else feed.ready(onready)\n\n  return stream\n\n  function onready (err) {\n    feed.ifAvailable.continue()\n    if (err) return stream.destroy(err)\n    if (stream.destroyed) return\n\n    var continueOnce = feed.ifAvailable.waitAndContinue()\n    var peer = new Peer(feed, opts)\n    peer.feed = feed\n    peer.stream = stream.feed(feed.key, {peer: peer})\n\n    peer.remoteId = stream.remoteId\n    stream.setMaxListeners(0)\n    stream.on('handshake', function () {\n      if (safeBufferEquals(peer.remoteId, stream.remoteId)) {\n        return\n      }\n      peer.remoteId = stream.remoteId\n      if (!triggerReady()) {\n        peer.feed.emit('remote-update', peer)\n      }\n      peer.remoteAck = stream.remoteAck\n    })\n    stream.on('close', continueOnce)\n    stream.on('end', continueOnce)\n    stream.on('error', continueOnce)\n    var firstTime = true\n\n    triggerReady()\n\n    function triggerReady () {\n      if (firstTime && peer.remoteId) {\n        firstTime = false\n\n        // stream might get destroyed on feed init in case of conf errors\n        if (stream.destroyed) return false\n\n        continueOnce()\n        peer.ready()\n        return true\n      }\n      return false\n    }\n  }\n}\n\nfunction Peer (feed, opts) {\n  this.feed = feed\n  this.stream = null // set by replicate just after creation\n  this.remoteId = null\n  this.wants = bitfield()\n  this.remoteBitfield = bitfield()\n  this.remoteLength = 0\n  this.remoteWant = false\n  this.remoteTree = null\n  this.remoteAck = false\n  this.live = !!opts.live\n  this.sparse = feed.sparse\n  this.ack = !!opts.ack\n\n  this.remoteDownloading = true\n  this.downloading = typeof opts.download === 'boolean' ? opts.download : !feed.writable\n  this.uploading = true\n\n  this.updated = false\n\n  this.maxRequests = opts.maxRequests || feed.maxRequests || 16\n  this.inflightRequests = []\n  this.inflightWants = 0\n\n  this._index = -1\n  this._lastBytes = 0\n  this._first = true\n  this._closed = false\n  this._destroyed = false\n  this._defaultDownloading = this.downloading\n  this._iterator = this.remoteBitfield.iterator()\n\n  this._stats = !opts.stats ? null : {\n    uploadedBytes: 0,\n    uploadedBlocks: 0,\n    downloadedBytes: 0,\n    downloadedBlocks: 0\n  }\n}\n\nPeer.prototype.onwant = function (want) {\n  if ((want.start & 8191) || (want.length & 8191)) return\n  if (!this.remoteWant && this.feed.length && this.feed.bitfield.get(this.feed.length - 1)) {\n    // Eagerly send the length of the feed to the otherside\n    // TODO: only send this if the remote is not wanting a region\n    // where this is contained in\n    this.stream.have({ start: this.feed.length - 1 })\n  }\n  this.remoteWant = true\n  var rle = this.feed.bitfield.compress(want.start, want.length)\n  this.stream.have({start: want.start, length: want.length, bitfield: rle})\n}\n\nPeer.prototype.ondata = function (data) {\n  var self = this\n\n  // Ignore unrequested messages unless we allow push\n  // TODO: would be better to check if the byte range was requested instead, but this works fine\n  var allowPush = this.feed.allowPush || !data.value\n  if (!allowPush && !this.feed._reserved.get(data.index)) {\n    // If we do not have this block, send back unhave message for this index,\n    // to let the remote know we rejected it.\n    // TODO: we might want to have some \"unwanted push\" threshold to punish spammers\n    if (!self.feed.bitfield.get(data.index)) self.unhave({start: data.index})\n    self._clear(data.index, !data.value)\n    return\n  }\n\n  this.feed._putBuffer(data.index, data.value, data, this, function (err) {\n    if (err) return self.destroy(err)\n    if (data.value) self.remoteBitfield.set(data.index, false)\n    if (self.remoteAck) {\n      // Send acknowledgement.\n      // In the future this could batch several ACKs at once\n      self.stream.have({start: data.index, length: 1, ack: true})\n    }\n    if (self._stats && data.value) {\n      self._stats.downloadedBlocks += 1\n      self._stats.downloadedBytes += data.value.length\n    }\n    self._clear(data.index, !data.value)\n  })\n}\n\nPeer.prototype._clear = function (index, hash) {\n  // TODO: optimize me (no splice and do not run through all ...)\n  for (var i = 0; i < this.inflightRequests.length; i++) {\n    if (this.inflightRequests[i].index === index) {\n      this.inflightRequests.splice(i, 1)\n      i--\n    }\n  }\n\n  this.feed._reserved.set(index, false)\n  // TODO: only update all if we have overlapping selections\n  this.feed._updatePeers()\n}\n\nPeer.prototype.onrequest = function (request) {\n  if (request.bytes) return this._onbytes(request)\n\n  // lazily instantiate the remote tree\n  if (!this.remoteTree) this.remoteTree = treeIndex()\n\n  var self = this\n  var opts = {digest: request.nodes, hash: request.hash, tree: this.remoteTree}\n\n  this.feed.proof(request.index, opts, onproof)\n\n  function onproof (err, proof) {\n    if (err) return self.destroy(err)\n    if (request.hash) onvalue(null, null)\n    else if (self.feed.bitfield.get(request.index)) self.feed._getBuffer(request.index, onvalue)\n\n    function onvalue (err, value) {\n      if (err) return self.destroy(err)\n\n      if (value) {\n        if (self._stats) {\n          self._stats.uploadedBlocks += 1\n          self._stats.uploadedBytes += value.length\n          self.feed._stats.uploadedBlocks += 1\n          self.feed._stats.uploadedBytes += value.length\n        }\n        self.feed.emit('upload', request.index, value, self)\n      }\n\n      // TODO: prob not needed with new bitfield\n      if (request.index + 1 > self.remoteLength) {\n        self.remoteLength = request.index + 1\n        self._updateEnd()\n      }\n\n      self.stream.data({\n        index: request.index,\n        value: value,\n        nodes: proof.nodes,\n        signature: proof.signature\n      })\n    }\n  }\n}\n\nPeer.prototype._onbytes = function (request) {\n  var self = this\n\n  this.feed.seek(request.bytes, {wait: false}, function (err, index) {\n    if (err) {\n      request.bytes = 0\n      self.onrequest(request)\n      return\n    }\n\n    // quick'n'dirty filter for parallel bytes requests\n    // it does not matter that this doesn't catch ALL parallel requests - just a bandwidth optimization\n    if (self._lastBytes === request.bytes) return\n    self._lastBytes = request.bytes\n\n    request.bytes = 0\n    request.index = index\n    request.nodes = 0\n\n    self.onrequest(request)\n  })\n}\n\nPeer.prototype.ontick = function () {\n  if (!this.inflightRequests.length) return\n\n  var first = this.inflightRequests[0]\n  if (--first.tick) return\n\n  if (first.hash ? this.feed.tree.get(2 * first.index) : this.feed.bitfield.get(first.index)) {\n    // prob a bytes response\n    this.inflightRequests.shift()\n    this.feed._reserved.set(first.index, false)\n    return\n  }\n\n  this.destroy(new Error('Request timeout'))\n}\n\nPeer.prototype.onhave = function (have) {\n  if (this.ack && have.ack && !have.bitfield && this.feed.bitfield.get(have.start)) {\n    this.stream.stream.emit('ack', have)\n    return\n  }\n\n  var updated = this._first\n  if (this._first) this._first = false\n\n  if (have.length === 1024 * 1024) {\n    this.feed.ifAvailable.continue()\n    this.inflightWants--\n  }\n\n  if (have.bitfield) { // TODO: handle start !== 0\n    if (have.length === 0 || have.length === 1) { // length === 1 is for backwards compat\n      this.wants = null // we are in backwards compat mode where we subscribe everything\n    }\n    var buf = rle.decode(have.bitfield)\n    var bits = buf.length * 8\n    remoteAndNotLocal(this.feed.bitfield, buf, this.remoteBitfield.littleEndian, have.start)\n    this.remoteBitfield.fill(buf, have.start)\n    if (bits > this.remoteLength) {\n      this.remoteLength = this.remoteBitfield.last() + 1\n      updated = true\n    }\n  } else {\n    // TODO: if len > something simply copy a 0b1111... buffer to the bitfield\n\n    var start = have.start\n    var len = have.length || 1\n\n    while (len--) this.remoteBitfield.set(start, !this.feed.bitfield.get(start++))\n    if (start > this.remoteLength) {\n      this.remoteLength = start\n      updated = true\n    }\n  }\n\n  if (updated) {\n    this.updated = true\n    this.feed.emit('remote-update', this)\n  }\n\n  this._updateEnd()\n  this.update()\n}\n\nPeer.prototype._updateEnd = function () {\n  if (this.live || this.feed.sparse || !this.feed._selections.length) return\n\n  var sel = this.feed._selections[0]\n  var remoteLength = this.feed.length || -1\n\n  for (var i = 0; i < this.feed.peers.length; i++) {\n    if (this.feed.peers[i].remoteLength > remoteLength) {\n      remoteLength = this.feed.peers[i].remoteLength\n    }\n  }\n\n  sel.end = remoteLength\n}\n\nPeer.prototype.onextension = function (name, message) {\n  this.feed.emit('extension', name, message, this)\n}\n\nPeer.prototype.oninfo = function (info) {\n  this.remoteDownloading = info.downloading\n  if (info.downloading || this.live) return\n  this.update()\n  if (this.feed._selections.length && this.downloading) return\n  this.end()\n}\n\nPeer.prototype.onunhave = function (unhave) {\n  var start = unhave.start\n  var len = unhave.length || 1\n\n  if (start === 0 && len >= this.remoteLength) {\n    this.remoteLength = 0\n    this.remoteBitfield = bitfield()\n    return\n  }\n\n  while (len--) this.remoteBitfield.set(start++, false)\n}\n\nPeer.prototype.onunwant =\nPeer.prototype.oncancel = function () {\n  // TODO: impl all of me\n}\n\nPeer.prototype.onclose = function () {\n  this.destroy()\n}\n\nPeer.prototype.have = function (have) { // called by feed\n  if (this.stream && this.remoteWant) this.stream.have(have)\n  var start = have.start\n  var len = have.length\n  while (len--) this.remoteBitfield.set(start++, false)\n}\n\nPeer.prototype.unhave = function (unhave) { // called by feed\n  if (this.stream && this.remoteWant) this.stream.unhave(unhave)\n}\n\nPeer.prototype.haveBytes = function (bytes) { // called by feed\n  for (var i = 0; i < this.inflightRequests.length; i++) {\n    if (this.inflightRequests[i].bytes === bytes) {\n      this.feed._reserved.set(this.inflightRequests[i].index, false)\n      this.inflightRequests.splice(i, 1)\n      i--\n    }\n  }\n\n  this.update()\n}\n\nPeer.prototype.update = function () {\n  // do nothing\n  while (this._update()) {}\n  this._sendWantsMaybe()\n}\n\nPeer.prototype._update = function () {\n  // should return true if mutated false if not\n  if (!this.downloading) return false\n\n  var selections = this.feed._selections\n  var waiting = this.feed._waiting\n  var wlen = waiting.length\n  var slen = selections.length\n  var inflight = this.inflightRequests.length\n  var offset = 0\n  var i = 0\n\n  // TODO: less duplicate code here\n  // TODO: re-add priority levels\n\n  while (inflight < this.maxRequests) {\n    offset = Math.floor(Math.random() * waiting.length)\n\n    for (i = 0; i < waiting.length; i++) {\n      var w = waiting[offset++]\n      if (offset === waiting.length) offset = 0\n\n      this._downloadWaiting(w)\n      if (waiting.length !== wlen) return true // mutated\n      if (this.inflightRequests.length >= this.maxRequests) return false\n    }\n    if (inflight === this.inflightRequests.length) break\n    inflight = this.inflightRequests.length\n  }\n\n  while (inflight < this.maxRequests) {\n    offset = Math.floor(Math.random() * selections.length)\n\n    for (i = 0; i < selections.length; i++) {\n      var s = selections[offset++]\n      if (offset === selections.length) offset = 0\n\n      if (!s.iterator) s.iterator = this.feed.bitfield.iterator(s.start, s.end)\n      this._downloadRange(s)\n      if (selections.length !== slen) return true // mutated\n      if (this.inflightRequests.length >= this.maxRequests) return false\n    }\n\n    if (inflight === this.inflightRequests.length) return false\n    inflight = this.inflightRequests.length\n  }\n\n  return false\n}\n\nPeer.prototype.ready = function () {\n  set.add(this.feed.peers, this)\n  this._sendWants()\n  this.feed.emit('peer-add', this)\n}\n\nPeer.prototype.end = function () {\n  if (!this.downloading && !this.remoteDownloading && !this.live) {\n    if (!this._defaultDownloading) {\n      this.stream.info({downloading: false, uploading: false})\n    }\n    this._close()\n    return\n  }\n  if (!this._closed) {\n    this._closed = true\n    this.downloading = false\n    this.stream.info({downloading: false, uploading: true})\n  } else {\n    if (!this.live) this._close()\n  }\n}\n\nPeer.prototype._close = function () {\n  if (this._index === -1) return\n  if (!this._destroyed) {\n    this.stream.close()\n    this._destroyed = true\n  }\n  set.remove(this.feed.peers, this)\n  this._index = -1\n  for (var i = 0; i < this.inflightRequests.length; i++) {\n    this.feed._reserved.set(this.inflightRequests[i].index, false)\n  }\n  this._updateEnd()\n  this.remoteWant = false\n  this.feed._updatePeers()\n  this.feed.emit('peer-remove', this)\n  for (i = 0; i < this.inflightWants; i++) {\n    this.feed.ifAvailable.continue()\n  }\n}\n\nPeer.prototype.destroy = function (err) {\n  if (this._index === -1 || this._destroyed) return\n  this.stream.destroy(err)\n  this._destroyed = true\n  this._close()\n}\n\nPeer.prototype._sendWantsMaybe = function () {\n  if (this.inflightRequests.length < this.maxRequests) this._sendWants()\n}\n\nPeer.prototype._sendWants = function () {\n  if (!this.wants || !this.downloading) return\n  if (this.inflightWants >= 16) return\n\n  var i\n\n  for (i = 0; i < this.feed._waiting.length; i++) {\n    var w = this.feed._waiting[i]\n    if (w.index === -1) this._sendWantRange(w)\n    else this._sendWant(w.index)\n    if (this.inflightWants >= 16) return\n  }\n\n  for (i = 0; i < this.feed._selections.length; i++) {\n    var s = this.feed._selections[i]\n    this._sendWantRange(s)\n    if (this.inflightWants >= 16) return\n  }\n\n  // always sub to the first range for now, usually what you want\n  this._sendWant(0)\n}\n\nPeer.prototype._sendWantRange = function (s) {\n  var want = 0\n\n  while (true) {\n    if (want >= this.remoteLength) return\n    if (s.end !== -1 && want >= s.end) return\n\n    if (this._sendWant(want)) return\n\n    // check if region is already selected - if so try next one\n    if (!this.wants.get(Math.floor(want / 1024 / 1024))) return\n    want += 1024 * 1024\n  }\n}\n\nPeer.prototype._sendWant = function (index) {\n  var len = 1024 * 1024\n  var j = Math.floor(index / len)\n  if (this.wants.get(j)) return false\n  this.wants.set(j, true)\n  this.inflightWants++\n  this.feed.ifAvailable.wait()\n  this.stream.want({start: j * len, length: len})\n  return true\n}\n\nPeer.prototype._downloadWaiting = function (wait) {\n  if (!wait.bytes) {\n    if (!this.remoteBitfield.get(wait.index) || !this.feed._reserved.set(wait.index, true)) return\n    this._request(wait.index, 0, false)\n    return\n  }\n\n  this._downloadRange(wait)\n}\n\nPeer.prototype._downloadRange = function (range) {\n  if (!range.iterator) range.iterator = this.feed.bitfield.iterator(range.start, range.end)\n\n  var reserved = this.feed._reserved\n  var ite = this._iterator\n  var wantedEnd = Math.min(range.end === -1 ? this.remoteLength : range.end, this.remoteLength)\n\n  var i = range.linear ? ite.seek(range.start).next(true) : nextRandom(ite, range.start, wantedEnd)\n  var start = i\n\n  if (i === -1 || i >= wantedEnd) {\n    if (!range.bytes && range.end > -1 && this.feed.length >= range.end && range.iterator.seek(0).next() === -1) {\n      set.remove(this.feed._selections, range)\n      range.callback(null)\n      if (!this.live && !this.sparse && !this.feed._selections.length) this.end()\n    }\n    return\n  }\n\n  while ((range.hash && this.feed.tree.get(2 * i)) || !reserved.set(i, true)) {\n    i = ite.next(true)\n\n    if (i > -1 && i < wantedEnd) {\n      // check this index\n      continue\n    }\n\n    if (!range.linear && start !== 0) {\n      // retry from the beginning since we are iterating randomly and started !== 0\n      i = ite.seek(range.start).next(true)\n      start = 0\n      if (i > -1 && i < wantedEnd) continue\n    }\n\n    // we have checked all indexes.\n    // if we are looking for hashes we should check if we have all now (first check only checks blocks)\n    if (range.hash) {\n      // quick'n'dirty check if have all hashes - can be optimized be checking only tree roots\n      // but we don't really request long ranges of hashes so yolo\n      for (var j = range.start; j < wantedEnd; j++) {\n        if (!this.feed.tree.get(2 * j)) return\n      }\n      if (!range.bytes) {\n        set.remove(this.feed._selections, range)\n        range.callback(null)\n      }\n    }\n\n    // exit the update loop - nothing to do\n    return\n  }\n\n  this._request(i, range.bytes || 0, range.hash)\n}\n\nPeer.prototype._request = function (index, bytes, hash) {\n  var request = {\n    tick: 6,\n    bytes: bytes,\n    index: index,\n    hash: hash,\n    nodes: this.feed.digest(index)\n  }\n\n  this.inflightRequests.push(request)\n  this.stream.request(request)\n}\n\nPeer.prototype.extension = function (name, message) {\n  this.stream.extension(name, message)\n}\n\nfunction createView (page) {\n  var buf = page ? page.buffer : EMPTY\n  return new DataView(buf.buffer, buf.byteOffset, 1024)\n}\n\nfunction remoteAndNotLocal (local, buf, le, start) {\n  var remote = new DataView(buf.buffer, buf.byteOffset)\n  var len = Math.floor(buf.length / 4)\n  var arr = new Uint32Array(buf.buffer, buf.byteOffset, len)\n  var p = start / 8192 // 8192 is bits per bitfield page\n  var l = 0\n  var page = createView(local.pages.get(p++, true))\n\n  for (var i = 0; i < len; i++) {\n    arr[i] = remote.getUint32(4 * i, !le) & ~page.getUint32(4 * (l++), !le)\n\n    if (l === 256) {\n      page = createView(local.pages.get(p++, true))\n      l = 0\n    }\n  }\n}\n\nfunction nextRandom (ite, start, end) {\n  var len = end - start\n  var i = ite.seek(Math.floor(Math.random() * len) + start).next(true)\n  return i === -1 || i >= end ? ite.seek(start).next(true) : i\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"../node_modules/hypercore/lib/replicate.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}}],"sources":{"../node_modules/hypercore/lib/replicate.js":"var protocol = require('hypercore-protocol')\nvar bitfield = require('fast-bitfield')\nvar set = require('unordered-set')\nvar rle = require('bitfield-rle').align(4)\nvar safeBufferEquals = require('./safe-buffer-equals')\nvar treeIndex = require('./tree-index')\n\nvar EMPTY = new Uint8Array(1024)\n\nmodule.exports = replicate\n\nfunction replicate (feed, opts) {\n  feed.ifAvailable.wait()\n  var stream = opts.stream\n\n  if (!stream) {\n    if (!opts.expectedFeeds) opts.expectedFeeds = 1\n    if (!opts.id) opts.id = feed.id\n    stream = protocol(opts)\n  }\n\n  if (feed.opened) onready(null)\n  else feed.ready(onready)\n\n  return stream\n\n  function onready (err) {\n    feed.ifAvailable.continue()\n    if (err) return stream.destroy(err)\n    if (stream.destroyed) return\n\n    var continueOnce = feed.ifAvailable.waitAndContinue()\n    var peer = new Peer(feed, opts)\n    peer.feed = feed\n    peer.stream = stream.feed(feed.key, {peer: peer})\n\n    peer.remoteId = stream.remoteId\n    stream.setMaxListeners(0)\n    stream.on('handshake', function () {\n      if (safeBufferEquals(peer.remoteId, stream.remoteId)) {\n        return\n      }\n      peer.remoteId = stream.remoteId\n      if (!triggerReady()) {\n        peer.feed.emit('remote-update', peer)\n      }\n      peer.remoteAck = stream.remoteAck\n    })\n    stream.on('close', continueOnce)\n    stream.on('end', continueOnce)\n    stream.on('error', continueOnce)\n    var firstTime = true\n\n    triggerReady()\n\n    function triggerReady () {\n      if (firstTime && peer.remoteId) {\n        firstTime = false\n\n        // stream might get destroyed on feed init in case of conf errors\n        if (stream.destroyed) return false\n\n        continueOnce()\n        peer.ready()\n        return true\n      }\n      return false\n    }\n  }\n}\n\nfunction Peer (feed, opts) {\n  this.feed = feed\n  this.stream = null // set by replicate just after creation\n  this.remoteId = null\n  this.wants = bitfield()\n  this.remoteBitfield = bitfield()\n  this.remoteLength = 0\n  this.remoteWant = false\n  this.remoteTree = null\n  this.remoteAck = false\n  this.live = !!opts.live\n  this.sparse = feed.sparse\n  this.ack = !!opts.ack\n\n  this.remoteDownloading = true\n  this.downloading = typeof opts.download === 'boolean' ? opts.download : !feed.writable\n  this.uploading = true\n\n  this.updated = false\n\n  this.maxRequests = opts.maxRequests || feed.maxRequests || 16\n  this.inflightRequests = []\n  this.inflightWants = 0\n\n  this._index = -1\n  this._lastBytes = 0\n  this._first = true\n  this._closed = false\n  this._destroyed = false\n  this._defaultDownloading = this.downloading\n  this._iterator = this.remoteBitfield.iterator()\n\n  this._stats = !opts.stats ? null : {\n    uploadedBytes: 0,\n    uploadedBlocks: 0,\n    downloadedBytes: 0,\n    downloadedBlocks: 0\n  }\n}\n\nPeer.prototype.onwant = function (want) {\n  if ((want.start & 8191) || (want.length & 8191)) return\n  if (!this.remoteWant && this.feed.length && this.feed.bitfield.get(this.feed.length - 1)) {\n    // Eagerly send the length of the feed to the otherside\n    // TODO: only send this if the remote is not wanting a region\n    // where this is contained in\n    this.stream.have({ start: this.feed.length - 1 })\n  }\n  this.remoteWant = true\n  var rle = this.feed.bitfield.compress(want.start, want.length)\n  this.stream.have({start: want.start, length: want.length, bitfield: rle})\n}\n\nPeer.prototype.ondata = function (data) {\n  var self = this\n\n  // Ignore unrequested messages unless we allow push\n  // TODO: would be better to check if the byte range was requested instead, but this works fine\n  var allowPush = this.feed.allowPush || !data.value\n  if (!allowPush && !this.feed._reserved.get(data.index)) {\n    // If we do not have this block, send back unhave message for this index,\n    // to let the remote know we rejected it.\n    // TODO: we might want to have some \"unwanted push\" threshold to punish spammers\n    if (!self.feed.bitfield.get(data.index)) self.unhave({start: data.index})\n    self._clear(data.index, !data.value)\n    return\n  }\n\n  this.feed._putBuffer(data.index, data.value, data, this, function (err) {\n    if (err) return self.destroy(err)\n    if (data.value) self.remoteBitfield.set(data.index, false)\n    if (self.remoteAck) {\n      // Send acknowledgement.\n      // In the future this could batch several ACKs at once\n      self.stream.have({start: data.index, length: 1, ack: true})\n    }\n    if (self._stats && data.value) {\n      self._stats.downloadedBlocks += 1\n      self._stats.downloadedBytes += data.value.length\n    }\n    self._clear(data.index, !data.value)\n  })\n}\n\nPeer.prototype._clear = function (index, hash) {\n  // TODO: optimize me (no splice and do not run through all ...)\n  for (var i = 0; i < this.inflightRequests.length; i++) {\n    if (this.inflightRequests[i].index === index) {\n      this.inflightRequests.splice(i, 1)\n      i--\n    }\n  }\n\n  this.feed._reserved.set(index, false)\n  // TODO: only update all if we have overlapping selections\n  this.feed._updatePeers()\n}\n\nPeer.prototype.onrequest = function (request) {\n  if (request.bytes) return this._onbytes(request)\n\n  // lazily instantiate the remote tree\n  if (!this.remoteTree) this.remoteTree = treeIndex()\n\n  var self = this\n  var opts = {digest: request.nodes, hash: request.hash, tree: this.remoteTree}\n\n  this.feed.proof(request.index, opts, onproof)\n\n  function onproof (err, proof) {\n    if (err) return self.destroy(err)\n    if (request.hash) onvalue(null, null)\n    else if (self.feed.bitfield.get(request.index)) self.feed._getBuffer(request.index, onvalue)\n\n    function onvalue (err, value) {\n      if (err) return self.destroy(err)\n\n      if (value) {\n        if (self._stats) {\n          self._stats.uploadedBlocks += 1\n          self._stats.uploadedBytes += value.length\n          self.feed._stats.uploadedBlocks += 1\n          self.feed._stats.uploadedBytes += value.length\n        }\n        self.feed.emit('upload', request.index, value, self)\n      }\n\n      // TODO: prob not needed with new bitfield\n      if (request.index + 1 > self.remoteLength) {\n        self.remoteLength = request.index + 1\n        self._updateEnd()\n      }\n\n      self.stream.data({\n        index: request.index,\n        value: value,\n        nodes: proof.nodes,\n        signature: proof.signature\n      })\n    }\n  }\n}\n\nPeer.prototype._onbytes = function (request) {\n  var self = this\n\n  this.feed.seek(request.bytes, {wait: false}, function (err, index) {\n    if (err) {\n      request.bytes = 0\n      self.onrequest(request)\n      return\n    }\n\n    // quick'n'dirty filter for parallel bytes requests\n    // it does not matter that this doesn't catch ALL parallel requests - just a bandwidth optimization\n    if (self._lastBytes === request.bytes) return\n    self._lastBytes = request.bytes\n\n    request.bytes = 0\n    request.index = index\n    request.nodes = 0\n\n    self.onrequest(request)\n  })\n}\n\nPeer.prototype.ontick = function () {\n  if (!this.inflightRequests.length) return\n\n  var first = this.inflightRequests[0]\n  if (--first.tick) return\n\n  if (first.hash ? this.feed.tree.get(2 * first.index) : this.feed.bitfield.get(first.index)) {\n    // prob a bytes response\n    this.inflightRequests.shift()\n    this.feed._reserved.set(first.index, false)\n    return\n  }\n\n  this.destroy(new Error('Request timeout'))\n}\n\nPeer.prototype.onhave = function (have) {\n  if (this.ack && have.ack && !have.bitfield && this.feed.bitfield.get(have.start)) {\n    this.stream.stream.emit('ack', have)\n    return\n  }\n\n  var updated = this._first\n  if (this._first) this._first = false\n\n  if (have.length === 1024 * 1024) {\n    this.feed.ifAvailable.continue()\n    this.inflightWants--\n  }\n\n  if (have.bitfield) { // TODO: handle start !== 0\n    if (have.length === 0 || have.length === 1) { // length === 1 is for backwards compat\n      this.wants = null // we are in backwards compat mode where we subscribe everything\n    }\n    var buf = rle.decode(have.bitfield)\n    var bits = buf.length * 8\n    remoteAndNotLocal(this.feed.bitfield, buf, this.remoteBitfield.littleEndian, have.start)\n    this.remoteBitfield.fill(buf, have.start)\n    if (bits > this.remoteLength) {\n      this.remoteLength = this.remoteBitfield.last() + 1\n      updated = true\n    }\n  } else {\n    // TODO: if len > something simply copy a 0b1111... buffer to the bitfield\n\n    var start = have.start\n    var len = have.length || 1\n\n    while (len--) this.remoteBitfield.set(start, !this.feed.bitfield.get(start++))\n    if (start > this.remoteLength) {\n      this.remoteLength = start\n      updated = true\n    }\n  }\n\n  if (updated) {\n    this.updated = true\n    this.feed.emit('remote-update', this)\n  }\n\n  this._updateEnd()\n  this.update()\n}\n\nPeer.prototype._updateEnd = function () {\n  if (this.live || this.feed.sparse || !this.feed._selections.length) return\n\n  var sel = this.feed._selections[0]\n  var remoteLength = this.feed.length || -1\n\n  for (var i = 0; i < this.feed.peers.length; i++) {\n    if (this.feed.peers[i].remoteLength > remoteLength) {\n      remoteLength = this.feed.peers[i].remoteLength\n    }\n  }\n\n  sel.end = remoteLength\n}\n\nPeer.prototype.onextension = function (name, message) {\n  this.feed.emit('extension', name, message, this)\n}\n\nPeer.prototype.oninfo = function (info) {\n  this.remoteDownloading = info.downloading\n  if (info.downloading || this.live) return\n  this.update()\n  if (this.feed._selections.length && this.downloading) return\n  this.end()\n}\n\nPeer.prototype.onunhave = function (unhave) {\n  var start = unhave.start\n  var len = unhave.length || 1\n\n  if (start === 0 && len >= this.remoteLength) {\n    this.remoteLength = 0\n    this.remoteBitfield = bitfield()\n    return\n  }\n\n  while (len--) this.remoteBitfield.set(start++, false)\n}\n\nPeer.prototype.onunwant =\nPeer.prototype.oncancel = function () {\n  // TODO: impl all of me\n}\n\nPeer.prototype.onclose = function () {\n  this.destroy()\n}\n\nPeer.prototype.have = function (have) { // called by feed\n  if (this.stream && this.remoteWant) this.stream.have(have)\n  var start = have.start\n  var len = have.length\n  while (len--) this.remoteBitfield.set(start++, false)\n}\n\nPeer.prototype.unhave = function (unhave) { // called by feed\n  if (this.stream && this.remoteWant) this.stream.unhave(unhave)\n}\n\nPeer.prototype.haveBytes = function (bytes) { // called by feed\n  for (var i = 0; i < this.inflightRequests.length; i++) {\n    if (this.inflightRequests[i].bytes === bytes) {\n      this.feed._reserved.set(this.inflightRequests[i].index, false)\n      this.inflightRequests.splice(i, 1)\n      i--\n    }\n  }\n\n  this.update()\n}\n\nPeer.prototype.update = function () {\n  // do nothing\n  while (this._update()) {}\n  this._sendWantsMaybe()\n}\n\nPeer.prototype._update = function () {\n  // should return true if mutated false if not\n  if (!this.downloading) return false\n\n  var selections = this.feed._selections\n  var waiting = this.feed._waiting\n  var wlen = waiting.length\n  var slen = selections.length\n  var inflight = this.inflightRequests.length\n  var offset = 0\n  var i = 0\n\n  // TODO: less duplicate code here\n  // TODO: re-add priority levels\n\n  while (inflight < this.maxRequests) {\n    offset = Math.floor(Math.random() * waiting.length)\n\n    for (i = 0; i < waiting.length; i++) {\n      var w = waiting[offset++]\n      if (offset === waiting.length) offset = 0\n\n      this._downloadWaiting(w)\n      if (waiting.length !== wlen) return true // mutated\n      if (this.inflightRequests.length >= this.maxRequests) return false\n    }\n    if (inflight === this.inflightRequests.length) break\n    inflight = this.inflightRequests.length\n  }\n\n  while (inflight < this.maxRequests) {\n    offset = Math.floor(Math.random() * selections.length)\n\n    for (i = 0; i < selections.length; i++) {\n      var s = selections[offset++]\n      if (offset === selections.length) offset = 0\n\n      if (!s.iterator) s.iterator = this.feed.bitfield.iterator(s.start, s.end)\n      this._downloadRange(s)\n      if (selections.length !== slen) return true // mutated\n      if (this.inflightRequests.length >= this.maxRequests) return false\n    }\n\n    if (inflight === this.inflightRequests.length) return false\n    inflight = this.inflightRequests.length\n  }\n\n  return false\n}\n\nPeer.prototype.ready = function () {\n  set.add(this.feed.peers, this)\n  this._sendWants()\n  this.feed.emit('peer-add', this)\n}\n\nPeer.prototype.end = function () {\n  if (!this.downloading && !this.remoteDownloading && !this.live) {\n    if (!this._defaultDownloading) {\n      this.stream.info({downloading: false, uploading: false})\n    }\n    this._close()\n    return\n  }\n  if (!this._closed) {\n    this._closed = true\n    this.downloading = false\n    this.stream.info({downloading: false, uploading: true})\n  } else {\n    if (!this.live) this._close()\n  }\n}\n\nPeer.prototype._close = function () {\n  if (this._index === -1) return\n  if (!this._destroyed) {\n    this.stream.close()\n    this._destroyed = true\n  }\n  set.remove(this.feed.peers, this)\n  this._index = -1\n  for (var i = 0; i < this.inflightRequests.length; i++) {\n    this.feed._reserved.set(this.inflightRequests[i].index, false)\n  }\n  this._updateEnd()\n  this.remoteWant = false\n  this.feed._updatePeers()\n  this.feed.emit('peer-remove', this)\n  for (i = 0; i < this.inflightWants; i++) {\n    this.feed.ifAvailable.continue()\n  }\n}\n\nPeer.prototype.destroy = function (err) {\n  if (this._index === -1 || this._destroyed) return\n  this.stream.destroy(err)\n  this._destroyed = true\n  this._close()\n}\n\nPeer.prototype._sendWantsMaybe = function () {\n  if (this.inflightRequests.length < this.maxRequests) this._sendWants()\n}\n\nPeer.prototype._sendWants = function () {\n  if (!this.wants || !this.downloading) return\n  if (this.inflightWants >= 16) return\n\n  var i\n\n  for (i = 0; i < this.feed._waiting.length; i++) {\n    var w = this.feed._waiting[i]\n    if (w.index === -1) this._sendWantRange(w)\n    else this._sendWant(w.index)\n    if (this.inflightWants >= 16) return\n  }\n\n  for (i = 0; i < this.feed._selections.length; i++) {\n    var s = this.feed._selections[i]\n    this._sendWantRange(s)\n    if (this.inflightWants >= 16) return\n  }\n\n  // always sub to the first range for now, usually what you want\n  this._sendWant(0)\n}\n\nPeer.prototype._sendWantRange = function (s) {\n  var want = 0\n\n  while (true) {\n    if (want >= this.remoteLength) return\n    if (s.end !== -1 && want >= s.end) return\n\n    if (this._sendWant(want)) return\n\n    // check if region is already selected - if so try next one\n    if (!this.wants.get(Math.floor(want / 1024 / 1024))) return\n    want += 1024 * 1024\n  }\n}\n\nPeer.prototype._sendWant = function (index) {\n  var len = 1024 * 1024\n  var j = Math.floor(index / len)\n  if (this.wants.get(j)) return false\n  this.wants.set(j, true)\n  this.inflightWants++\n  this.feed.ifAvailable.wait()\n  this.stream.want({start: j * len, length: len})\n  return true\n}\n\nPeer.prototype._downloadWaiting = function (wait) {\n  if (!wait.bytes) {\n    if (!this.remoteBitfield.get(wait.index) || !this.feed._reserved.set(wait.index, true)) return\n    this._request(wait.index, 0, false)\n    return\n  }\n\n  this._downloadRange(wait)\n}\n\nPeer.prototype._downloadRange = function (range) {\n  if (!range.iterator) range.iterator = this.feed.bitfield.iterator(range.start, range.end)\n\n  var reserved = this.feed._reserved\n  var ite = this._iterator\n  var wantedEnd = Math.min(range.end === -1 ? this.remoteLength : range.end, this.remoteLength)\n\n  var i = range.linear ? ite.seek(range.start).next(true) : nextRandom(ite, range.start, wantedEnd)\n  var start = i\n\n  if (i === -1 || i >= wantedEnd) {\n    if (!range.bytes && range.end > -1 && this.feed.length >= range.end && range.iterator.seek(0).next() === -1) {\n      set.remove(this.feed._selections, range)\n      range.callback(null)\n      if (!this.live && !this.sparse && !this.feed._selections.length) this.end()\n    }\n    return\n  }\n\n  while ((range.hash && this.feed.tree.get(2 * i)) || !reserved.set(i, true)) {\n    i = ite.next(true)\n\n    if (i > -1 && i < wantedEnd) {\n      // check this index\n      continue\n    }\n\n    if (!range.linear && start !== 0) {\n      // retry from the beginning since we are iterating randomly and started !== 0\n      i = ite.seek(range.start).next(true)\n      start = 0\n      if (i > -1 && i < wantedEnd) continue\n    }\n\n    // we have checked all indexes.\n    // if we are looking for hashes we should check if we have all now (first check only checks blocks)\n    if (range.hash) {\n      // quick'n'dirty check if have all hashes - can be optimized be checking only tree roots\n      // but we don't really request long ranges of hashes so yolo\n      for (var j = range.start; j < wantedEnd; j++) {\n        if (!this.feed.tree.get(2 * j)) return\n      }\n      if (!range.bytes) {\n        set.remove(this.feed._selections, range)\n        range.callback(null)\n      }\n    }\n\n    // exit the update loop - nothing to do\n    return\n  }\n\n  this._request(i, range.bytes || 0, range.hash)\n}\n\nPeer.prototype._request = function (index, bytes, hash) {\n  var request = {\n    tick: 6,\n    bytes: bytes,\n    index: index,\n    hash: hash,\n    nodes: this.feed.digest(index)\n  }\n\n  this.inflightRequests.push(request)\n  this.stream.request(request)\n}\n\nPeer.prototype.extension = function (name, message) {\n  this.stream.extension(name, message)\n}\n\nfunction createView (page) {\n  var buf = page ? page.buffer : EMPTY\n  return new DataView(buf.buffer, buf.byteOffset, 1024)\n}\n\nfunction remoteAndNotLocal (local, buf, le, start) {\n  var remote = new DataView(buf.buffer, buf.byteOffset)\n  var len = Math.floor(buf.length / 4)\n  var arr = new Uint32Array(buf.buffer, buf.byteOffset, len)\n  var p = start / 8192 // 8192 is bits per bitfield page\n  var l = 0\n  var page = createView(local.pages.get(p++, true))\n\n  for (var i = 0; i < len; i++) {\n    arr[i] = remote.getUint32(4 * i, !le) & ~page.getUint32(4 * (l++), !le)\n\n    if (l === 256) {\n      page = createView(local.pages.get(p++, true))\n      l = 0\n    }\n  }\n}\n\nfunction nextRandom (ite, start, end) {\n  var len = end - start\n  var i = ite.seek(Math.floor(Math.random() * len) + start).next(true)\n  return i === -1 || i >= end ? ite.seek(start).next(true) : i\n}\n"},"lineCount":643}},"error":null,"hash":"0d13c886e5430f6a0bde7fea1770193d","cacheData":{"env":{}}}